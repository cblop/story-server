WARNING: You're currently running as root; probably by accident.
Press control-C to abort or Enter to continue as root.
Set LEIN_ROOT to disable this warning.
/home/mthom/bin/lein: line 102: read: read error: 0: Bad file descriptor
Retrieving lein-ring/lein-ring/0.9.7/lein-ring-0.9.7.pom from clojars
Retrieving org/clojure/data.xml/0.0.8/data.xml-0.0.8.pom from central
Retrieving org/clojure/pom.contrib/0.1.2/pom.contrib-0.1.2.pom from central
Retrieving org/sonatype/oss/oss-parent/7/oss-parent-7.pom from central
Retrieving org/clojure/clojure/1.4.0/clojure-1.4.0.pom from central
Retrieving org/sonatype/oss/oss-parent/5/oss-parent-5.pom from central
Retrieving leinjacker/leinjacker/0.4.2/leinjacker-0.4.2.pom from clojars
Retrieving org/clojure/core.contracts/0.0.1/core.contracts-0.0.1.pom from central
Retrieving org/clojure/pom.contrib/0.0.26/pom.contrib-0.0.26.pom from central
Retrieving org/clojure/core.unify/0.5.3/core.unify-0.5.3.pom from central
Retrieving org/clojure/data.xml/0.0.8/data.xml-0.0.8.jar from central
Retrieving org/clojure/core.contracts/0.0.1/core.contracts-0.0.1.jar from central
Retrieving org/clojure/core.unify/0.5.3/core.unify-0.5.3.jar from central
Retrieving org/clojure/clojure/1.4.0/clojure-1.4.0.jar from central
Retrieving lein-ring/lein-ring/0.9.7/lein-ring-0.9.7.jar from clojars
Retrieving leinjacker/leinjacker/0.4.2/leinjacker-0.4.2.jar from clojars
Retrieving org/clojure/clojure/1.8.0/clojure-1.8.0.pom from central
Retrieving compojure/compojure/1.5.0/compojure-1.5.0.pom from clojars
Retrieving org/clojure/clojure/1.7.0/clojure-1.7.0.pom from central
Retrieving org/clojure/tools.macro/0.1.5/tools.macro-0.1.5.pom from central
Retrieving clout/clout/2.1.2/clout-2.1.2.pom from clojars
Retrieving org/clojure/clojure/1.5.1/clojure-1.5.1.pom from central
Retrieving instaparse/instaparse/1.4.0/instaparse-1.4.0.pom from clojars
Retrieving medley/medley/0.7.3/medley-0.7.3.pom from clojars
Retrieving ring/ring-core/1.4.0/ring-core-1.4.0.pom from clojars
Retrieving org/clojure/tools.reader/0.9.1/tools.reader-0.9.1.pom from central
Retrieving ring/ring-codec/1.0.0/ring-codec-1.0.0.pom from clojars
Retrieving org/clojure/clojure/1.3.0/clojure-1.3.0.pom from central
Retrieving commons-codec/commons-codec/1.6/commons-codec-1.6.pom from central
Retrieving org/apache/commons/commons-parent/22/commons-parent-22.pom from central
Retrieving org/apache/apache/9/apache-9.pom from central
Retrieving commons-io/commons-io/2.4/commons-io-2.4.pom from central
Retrieving org/apache/commons/commons-parent/25/commons-parent-25.pom from central
Retrieving commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.pom from central
Retrieving org/apache/commons/commons-parent/32/commons-parent-32.pom from central
Retrieving org/apache/apache/13/apache-13.pom from central
Retrieving commons-io/commons-io/2.2/commons-io-2.2.pom from central
Retrieving org/apache/commons/commons-parent/24/commons-parent-24.pom from central
Retrieving clj-time/clj-time/0.9.0/clj-time-0.9.0.pom from clojars
Retrieving joda-time/joda-time/2.6/joda-time-2.6.pom from central
Retrieving org/clojure/clojure/1.6.0/clojure-1.6.0.pom from central
Retrieving crypto-random/crypto-random/1.2.0/crypto-random-1.2.0.pom from clojars
Retrieving org/clojure/clojure/1.2.1/clojure-1.2.1.pom from central
Retrieving crypto-equality/crypto-equality/1.0.0/crypto-equality-1.0.0.pom from clojars
Retrieving eigenhombre/namejen/0.1.12/namejen-0.1.12.pom from clojars
Retrieving com/novemberain/monger/3.0.2/monger-3.0.2.pom from clojars
Retrieving org/mongodb/mongodb-driver/3.2.0/mongodb-driver-3.2.0.pom from central
Retrieving org/mongodb/bson/3.2.0/bson-3.2.0.pom from central
Retrieving org/mongodb/mongodb-driver-core/3.2.0/mongodb-driver-core-3.2.0.pom from central
Retrieving clojurewerkz/support/1.1.0/support-1.1.0.pom from clojars
Retrieving com/google/guava/guava/18.0/guava-18.0.pom from central
Retrieving com/google/guava/guava-parent/18.0/guava-parent-18.0.pom from central
Retrieving me/raynes/conch/0.8.0/conch-0.8.0.pom from clojars
Retrieving org/flatland/useful/0.10.6/useful-0.10.6.pom from clojars
Retrieving org/clojure/clojure/1.5.0/clojure-1.5.0.pom from central
Retrieving org/clojure/tools.macro/0.1.1/tools.macro-0.1.1.pom from central
Retrieving org/clojure/pom.contrib/0.0.20/pom.contrib-0.0.20.pom from central
Retrieving org/clojure/clojure/1.3.0-alpha5/clojure-1.3.0-alpha5.pom from central
Retrieving org/clojure/tools.reader/0.7.2/tools.reader-0.7.2.pom from central
Retrieving ring/ring-defaults/0.2.0/ring-defaults-0.2.0.pom from clojars
Retrieving ring/ring-ssl/0.2.1/ring-ssl-0.2.1.pom from clojars
Retrieving ring/ring-core/1.3.0-RC1/ring-core-1.3.0-RC1.pom from clojars
Retrieving org/clojure/tools.reader/0.8.1/tools.reader-0.8.1.pom from central
Retrieving commons-fileupload/commons-fileupload/1.3/commons-fileupload-1.3.pom from central
Retrieving org/apache/commons/commons-parent/28/commons-parent-28.pom from central
Retrieving clj-time/clj-time/0.6.0/clj-time-0.6.0.pom from clojars
Retrieving joda-time/joda-time/2.2/joda-time-2.2.pom from central
Retrieving ring/ring-headers/0.2.0/ring-headers-0.2.0.pom from clojars
Retrieving ring/ring-anti-forgery/1.0.0/ring-anti-forgery-1.0.0.pom from clojars
Retrieving hiccup/hiccup/1.0.5/hiccup-1.0.5.pom from clojars
Retrieving javax/servlet/servlet-api/2.5/servlet-api-2.5.pom from central
Retrieving ring/ring-json/0.4.0/ring-json-0.4.0.pom from clojars
Retrieving cheshire/cheshire/5.5.0/cheshire-5.5.0.pom from clojars
Retrieving com/fasterxml/jackson/core/jackson-core/2.5.3/jackson-core-2.5.3.pom from central
Retrieving com/fasterxml/jackson/jackson-parent/2.5.1/jackson-parent-2.5.1.pom from central
Retrieving com/fasterxml/oss-parent/19/oss-parent-19.pom from central
Retrieving com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.5.3/jackson-dataformat-smile-2.5.3.pom from central
Retrieving com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.5.3/jackson-dataformat-cbor-2.5.3.pom from central
Retrieving tigris/tigris/0.1.1/tigris-0.1.1.pom from clojars
Retrieving ring/ring/1.4.0/ring-1.4.0.pom from clojars
Retrieving ring/ring-devel/1.4.0/ring-devel-1.4.0.pom from clojars
Retrieving clj-stacktrace/clj-stacktrace/0.2.8/clj-stacktrace-0.2.8.pom from clojars
Retrieving ns-tracker/ns-tracker/0.3.0/ns-tracker-0.3.0.pom from clojars
Retrieving org/clojure/tools.namespace/0.2.10/tools.namespace-0.2.10.pom from central
Retrieving org/clojure/java.classpath/0.2.2/java.classpath-0.2.2.pom from central
Retrieving ring/ring-jetty-adapter/1.4.0/ring-jetty-adapter-1.4.0.pom from clojars
Retrieving ring/ring-servlet/1.4.0/ring-servlet-1.4.0.pom from clojars
Retrieving org/eclipse/jetty/jetty-server/9.2.10.v20150310/jetty-server-9.2.10.v20150310.pom from central
Retrieving org/eclipse/jetty/jetty-project/9.2.10.v20150310/jetty-project-9.2.10.v20150310.pom from central
Retrieving org/eclipse/jetty/jetty-parent/23/jetty-parent-23.pom from central
Retrieving javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.pom from central
Retrieving net/java/jvnet-parent/3/jvnet-parent-3.pom from central
Retrieving org/eclipse/jetty/jetty-http/9.2.10.v20150310/jetty-http-9.2.10.v20150310.pom from central
Retrieving org/eclipse/jetty/jetty-util/9.2.10.v20150310/jetty-util-9.2.10.v20150310.pom from central
Retrieving org/eclipse/jetty/jetty-io/9.2.10.v20150310/jetty-io-9.2.10.v20150310.pom from central
Retrieving tropic/tropic/0.9.5/tropic-0.9.5.pom from clojars
Retrieving instaparse/instaparse/1.4.1/instaparse-1.4.1.pom from clojars
Retrieving rhizome/rhizome/0.2.5/rhizome-0.2.5.pom from clojars
Retrieving enlive/enlive/1.1.6/enlive-1.1.6.pom from clojars
Retrieving org/clojure/clojure/1.2.0/clojure-1.2.0.pom from central
Retrieving org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.pom from central
Retrieving org/jsoup/jsoup/1.7.2/jsoup-1.7.2.pom from central
Retrieving org/clojure/math.combinatorics/0.1.1/math.combinatorics-0.1.1.pom from central
Retrieving org/clojure/tools.cli/0.3.5/tools.cli-0.3.5.pom from central
Retrieving clj-wordnet/clj-wordnet/0.1.0/clj-wordnet-0.1.0.pom from clojars
Retrieving edu/mit/jwi/2.3.3/jwi-2.3.3.pom from delver
Retrieving com/rpl/specter/0.9.0/specter-0.9.0.pom from clojars
Retrieving org/clojure/clojurescript/0.0-3211/clojurescript-0.0-3211.pom from central
Retrieving org/clojure/clojure/1.7.0-beta1/clojure-1.7.0-beta1.pom from central
Retrieving com/google/javascript/closure-compiler/v20150126/closure-compiler-v20150126.pom from central
Retrieving com/google/javascript/closure-compiler-parent/v20150126/closure-compiler-parent-v20150126.pom from central
Retrieving org/sonatype/oss/oss-parent/9/oss-parent-9.pom from central
Retrieving com/google/javascript/closure-compiler-externs/v20150126/closure-compiler-externs-v20150126.pom from central
Retrieving args4j/args4j/2.0.26/args4j-2.0.26.pom from central
Retrieving args4j/args4j-site/2.0.26/args4j-site-2.0.26.pom from central
Retrieving org/kohsuke/pom/6/pom-6.pom from central
Retrieving com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.pom from central
Retrieving com/google/google/1/google-1.pom from central
Retrieving com/google/code/gson/gson/2.2.4/gson-2.2.4.pom from central
Retrieving com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.pom from central
Retrieving com/google/truth/truth/0.24/truth-0.24.pom from central
Retrieving com/google/truth/truth-parent/0.24/truth-parent-0.24.pom from central
Retrieving com/google/guava/guava/17.0/guava-17.0.pom from central
Retrieving com/google/guava/guava-parent/17.0/guava-parent-17.0.pom from central
Retrieving junit/junit/4.10/junit-4.10.pom from central
Retrieving org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.pom from central
Retrieving org/hamcrest/hamcrest-parent/1.1/hamcrest-parent-1.1.pom from central
Retrieving org/clojure/google-closure-library/0.0-20140718-946a7d39/google-closure-library-0.0-20140718-946a7d39.pom from central
Retrieving org/clojure/google-closure-library-third-party/0.0-20140718-946a7d39/google-closure-library-third-party-0.0-20140718-946a7d39.pom from central
Retrieving org/clojure/data.json/0.2.6/data.json-0.2.6.pom from central
Retrieving org/mozilla/rhino/1.7R5/rhino-1.7R5.pom from central
Retrieving org/clojure/tools.nrepl/0.2.12/tools.nrepl-0.2.12.pom from central
Retrieving clojure-complete/clojure-complete/0.2.4/clojure-complete-0.2.4.pom from clojars
Retrieving ring/ring-mock/0.3.0/ring-mock-0.3.0.pom from clojars
Retrieving org/clojure/tools.macro/0.1.5/tools.macro-0.1.5.jar from central
Retrieving org/clojure/clojure/1.8.0/clojure-1.8.0.jar from central
Retrieving org/clojure/tools.reader/0.9.1/tools.reader-0.9.1.jar from central
Retrieving commons-io/commons-io/2.4/commons-io-2.4.jar from central
Retrieving commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar from central
Retrieving joda-time/joda-time/2.6/joda-time-2.6.jar from central
Retrieving commons-codec/commons-codec/1.6/commons-codec-1.6.jar from central
Retrieving org/mongodb/mongodb-driver/3.2.0/mongodb-driver-3.2.0.jar from central
Retrieving org/mongodb/bson/3.2.0/bson-3.2.0.jar from central
Retrieving org/mongodb/mongodb-driver-core/3.2.0/mongodb-driver-core-3.2.0.jar from central
Retrieving com/google/guava/guava/18.0/guava-18.0.jar from central
Retrieving com/fasterxml/jackson/core/jackson-core/2.5.3/jackson-core-2.5.3.jar from central
Retrieving com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.5.3/jackson-dataformat-smile-2.5.3.jar from central
Retrieving com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.5.3/jackson-dataformat-cbor-2.5.3.jar from central
Retrieving org/clojure/java.classpath/0.2.2/java.classpath-0.2.2.jar from central
Retrieving org/clojure/tools.namespace/0.2.10/tools.namespace-0.2.10.jar from central
Retrieving org/eclipse/jetty/jetty-server/9.2.10.v20150310/jetty-server-9.2.10.v20150310.jar from central
Retrieving javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar from central
Retrieving org/eclipse/jetty/jetty-http/9.2.10.v20150310/jetty-http-9.2.10.v20150310.jar from central
Retrieving org/eclipse/jetty/jetty-util/9.2.10.v20150310/jetty-util-9.2.10.v20150310.jar from central
Retrieving org/eclipse/jetty/jetty-io/9.2.10.v20150310/jetty-io-9.2.10.v20150310.jar from central
Retrieving org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar from central
Retrieving org/clojure/math.combinatorics/0.1.1/math.combinatorics-0.1.1.jar from central
Retrieving org/jsoup/jsoup/1.7.2/jsoup-1.7.2.jar from central
Retrieving org/clojure/tools.cli/0.3.5/tools.cli-0.3.5.jar from central
Retrieving com/google/javascript/closure-compiler/v20150126/closure-compiler-v20150126.jar from central
Retrieving args4j/args4j/2.0.26/args4j-2.0.26.jar from central
Retrieving com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar from central
Retrieving com/google/javascript/closure-compiler-externs/v20150126/closure-compiler-externs-v20150126.jar from central
Retrieving org/clojure/clojurescript/0.0-3211/clojurescript-0.0-3211.jar from central
Retrieving com/google/code/gson/gson/2.2.4/gson-2.2.4.jar from central
Retrieving com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar from central
Retrieving junit/junit/4.10/junit-4.10.jar from central
Retrieving org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar from central
Retrieving com/google/truth/truth/0.24/truth-0.24.jar from central
Retrieving org/clojure/google-closure-library-third-party/0.0-20140718-946a7d39/google-closure-library-third-party-0.0-20140718-946a7d39.jar from central
Retrieving org/clojure/google-closure-library/0.0-20140718-946a7d39/google-closure-library-0.0-20140718-946a7d39.jar from central
Retrieving org/clojure/data.json/0.2.6/data.json-0.2.6.jar from central
Retrieving org/mozilla/rhino/1.7R5/rhino-1.7R5.jar from central
Retrieving org/clojure/tools.nrepl/0.2.12/tools.nrepl-0.2.12.jar from central
Retrieving javax/servlet/servlet-api/2.5/servlet-api-2.5.jar from central
Retrieving compojure/compojure/1.5.0/compojure-1.5.0.jar from clojars
Retrieving medley/medley/0.7.3/medley-0.7.3.jar from clojars
Retrieving clout/clout/2.1.2/clout-2.1.2.jar from clojars
Retrieving clj-time/clj-time/0.9.0/clj-time-0.9.0.jar from clojars
Retrieving ring/ring-core/1.4.0/ring-core-1.4.0.jar from clojars
Retrieving crypto-random/crypto-random/1.2.0/crypto-random-1.2.0.jar from clojars
Retrieving crypto-equality/crypto-equality/1.0.0/crypto-equality-1.0.0.jar from clojars
Retrieving ring/ring-codec/1.0.0/ring-codec-1.0.0.jar from clojars
Retrieving eigenhombre/namejen/0.1.12/namejen-0.1.12.jar from clojars
Retrieving com/novemberain/monger/3.0.2/monger-3.0.2.jar from clojars
Retrieving clojurewerkz/support/1.1.0/support-1.1.0.jar from clojars
Retrieving me/raynes/conch/0.8.0/conch-0.8.0.jar from clojars
Retrieving org/flatland/useful/0.10.6/useful-0.10.6.jar from clojars
Retrieving ring/ring-defaults/0.2.0/ring-defaults-0.2.0.jar from clojars
Retrieving ring/ring-ssl/0.2.1/ring-ssl-0.2.1.jar from clojars
Retrieving ring/ring-headers/0.2.0/ring-headers-0.2.0.jar from clojars
Retrieving ring/ring-anti-forgery/1.0.0/ring-anti-forgery-1.0.0.jar from clojars
Retrieving hiccup/hiccup/1.0.5/hiccup-1.0.5.jar from clojars
Retrieving ring/ring-json/0.4.0/ring-json-0.4.0.jar from clojars
Retrieving cheshire/cheshire/5.5.0/cheshire-5.5.0.jar from clojars
Retrieving tigris/tigris/0.1.1/tigris-0.1.1.jar from clojars
Retrieving ring/ring/1.4.0/ring-1.4.0.jar from clojars
Retrieving ring/ring-devel/1.4.0/ring-devel-1.4.0.jar from clojars
Retrieving clj-stacktrace/clj-stacktrace/0.2.8/clj-stacktrace-0.2.8.jar from clojars
Retrieving ns-tracker/ns-tracker/0.3.0/ns-tracker-0.3.0.jar from clojars
Retrieving ring/ring-jetty-adapter/1.4.0/ring-jetty-adapter-1.4.0.jar from clojars
Retrieving instaparse/instaparse/1.4.1/instaparse-1.4.1.jar from clojars
Retrieving ring/ring-servlet/1.4.0/ring-servlet-1.4.0.jar from clojars
Retrieving tropic/tropic/0.9.5/tropic-0.9.5.jar from clojars
Retrieving rhizome/rhizome/0.2.5/rhizome-0.2.5.jar from clojars
Retrieving enlive/enlive/1.1.6/enlive-1.1.6.jar from clojars
Retrieving clj-wordnet/clj-wordnet/0.1.0/clj-wordnet-0.1.0.jar from clojars
Retrieving com/rpl/specter/0.9.0/specter-0.9.0.jar from clojars
Retrieving ring/ring-mock/0.3.0/ring-mock-0.3.0.jar from clojars
Retrieving clojure-complete/clojure-complete/0.2.4/clojure-complete-0.2.4.jar from clojars
Retrieving edu/mit/jwi/2.3.3/jwi-2.3.3.jar from delver
Retrieving ring-server/ring-server/0.4.0/ring-server-0.4.0.pom from clojars
Retrieving ring/ring/1.3.2/ring-1.3.2.pom from clojars
Retrieving ring/ring-core/1.3.2/ring-core-1.3.2.pom from clojars
Retrieving ring/ring-devel/1.3.2/ring-devel-1.3.2.pom from clojars
Retrieving clj-stacktrace/clj-stacktrace/0.2.7/clj-stacktrace-0.2.7.pom from clojars
Retrieving ns-tracker/ns-tracker/0.2.2/ns-tracker-0.2.2.pom from clojars
Retrieving org/clojure/tools.namespace/0.2.4/tools.namespace-0.2.4.pom from central
Retrieving ring/ring-jetty-adapter/1.3.2/ring-jetty-adapter-1.3.2.pom from clojars
Retrieving ring/ring-servlet/1.3.2/ring-servlet-1.3.2.pom from clojars
Retrieving org/eclipse/jetty/jetty-server/7.6.13.v20130916/jetty-server-7.6.13.v20130916.pom from central
Retrieving org/eclipse/jetty/jetty-project/7.6.13.v20130916/jetty-project-7.6.13.v20130916.pom from central
Retrieving org/eclipse/jetty/jetty-parent/20/jetty-parent-20.pom from central
Retrieving org/eclipse/jetty/orbit/javax.servlet/2.5.0.v201103041518/javax.servlet-2.5.0.v201103041518.pom from central
Retrieving org/eclipse/jetty/orbit/jetty-orbit/1/jetty-orbit-1.pom from central
Retrieving org/eclipse/jetty/jetty-parent/18/jetty-parent-18.pom from central
Retrieving org/eclipse/jetty/jetty-continuation/7.6.13.v20130916/jetty-continuation-7.6.13.v20130916.pom from central
Retrieving org/eclipse/jetty/jetty-http/7.6.13.v20130916/jetty-http-7.6.13.v20130916.pom from central
Retrieving org/eclipse/jetty/jetty-io/7.6.13.v20130916/jetty-io-7.6.13.v20130916.pom from central
Retrieving org/eclipse/jetty/jetty-util/7.6.13.v20130916/jetty-util-7.6.13.v20130916.pom from central
Retrieving ring-refresh/ring-refresh/0.1.2/ring-refresh-0.1.2.pom from clojars
Retrieving watchtower/watchtower/0.1.1/watchtower-0.1.1.pom from clojars
Retrieving compojure/compojure/1.1.5/compojure-1.1.5.pom from clojars
Retrieving org/clojure/core.incubator/0.1.0/core.incubator-0.1.0.pom from central
Retrieving org/clojure/tools.macro/0.1.0/tools.macro-0.1.0.pom from central
Retrieving clout/clout/1.0.1/clout-1.0.1.pom from clojars
Retrieving ring/ring-core/1.1.7/ring-core-1.1.7.pom from clojars
Retrieving commons-io/commons-io/2.1/commons-io-2.1.pom from central
Retrieving commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.pom from central
Retrieving org/apache/commons/commons-parent/7/commons-parent-7.pom from central
Retrieving org/apache/apache/4/apache-4.pom from central
Retrieving clj-time/clj-time/0.3.7/clj-time-0.3.7.pom from clojars
Retrieving joda-time/joda-time/2.0/joda-time-2.0.pom from central
Retrieving ring-server/ring-server/0.4.0/ring-server-0.4.0.jar from clojars
Retrieving ring-refresh/ring-refresh/0.1.2/ring-refresh-0.1.2.jar from clojars
Retrieving watchtower/watchtower/0.1.1/watchtower-0.1.1.jar from clojars
2017-06-08 15:33:59.563:INFO::main: Logging initialized @3159ms
Exception in thread "main" java.lang.ExceptionInInitializerError, compiling:(clout/core.clj:1:1)
	at clojure.lang.Compiler.load(Compiler.java:7391)
	at clojure.lang.RT.loadResourceScript(RT.java:372)
	at clojure.lang.RT.loadResourceScript(RT.java:363)
	at clojure.lang.RT.load(RT.java:453)
	at clojure.lang.RT.load(RT.java:419)
	at clojure.core$load$fn__5677.invoke(core.clj:5893)
	at clojure.core$load.invokeStatic(core.clj:5892)
	at clojure.core$load.doInvoke(core.clj:5876)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invokeStatic(core.clj:5697)
	at clojure.core$load_one.invoke(core.clj:5692)
	at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)
	at clojure.core$load_lib.invokeStatic(core.clj:5736)
	at clojure.core$load_lib.doInvoke(core.clj:5717)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$load_libs.invokeStatic(core.clj:5774)
	at clojure.core$load_libs.doInvoke(core.clj:5758)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$require.invokeStatic(core.clj:5796)
	at clojure.core$require.doInvoke(core.clj:5796)
	at clojure.lang.RestFn.invoke(RestFn.java:482)
	at compojure.core$eval1510$loading__5569__auto____1511.invoke(core.clj:1)
	at compojure.core$eval1510.invokeStatic(core.clj:1)
	at compojure.core$eval1510.invoke(core.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6916)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.RT.loadResourceScript(RT.java:372)
	at clojure.lang.RT.loadResourceScript(RT.java:363)
	at clojure.lang.RT.load(RT.java:453)
	at clojure.lang.RT.load(RT.java:419)
	at clojure.core$load$fn__5677.invoke(core.clj:5893)
	at clojure.core$load.invokeStatic(core.clj:5892)
	at clojure.core$load.doInvoke(core.clj:5876)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invokeStatic(core.clj:5697)
	at clojure.core$load_one.invoke(core.clj:5692)
	at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)
	at clojure.core$load_lib.invokeStatic(core.clj:5736)
	at clojure.core$load_lib.doInvoke(core.clj:5717)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$load_libs.invokeStatic(core.clj:5774)
	at clojure.core$load_libs.doInvoke(core.clj:5758)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invokeStatic(core.clj:650)
	at clojure.core$use.invokeStatic(core.clj:5860)
	at clojure.core$use.doInvoke(core.clj:5860)
	at clojure.lang.RestFn.invoke(RestFn.java:436)
	at ring.middleware.refresh$eval1502$loading__5569__auto____1503.invoke(refresh.clj:1)
	at ring.middleware.refresh$eval1502.invokeStatic(refresh.clj:1)
	at ring.middleware.refresh$eval1502.invoke(refresh.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6916)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.RT.loadResourceScript(RT.java:372)
	at clojure.lang.RT.loadResourceScript(RT.java:363)
	at clojure.lang.RT.load(RT.java:453)
	at clojure.lang.RT.load(RT.java:419)
	at clojure.core$load$fn__5677.invoke(core.clj:5893)
	at clojure.core$load.invokeStatic(core.clj:5892)
	at clojure.core$load.doInvoke(core.clj:5876)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invokeStatic(core.clj:5697)
	at clojure.core$load_one.invoke(core.clj:5692)
	at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)
	at clojure.core$load_lib.invokeStatic(core.clj:5736)
	at clojure.core$load_lib.doInvoke(core.clj:5717)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$load_libs.invokeStatic(core.clj:5774)
	at clojure.core$load_libs.doInvoke(core.clj:5758)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invokeStatic(core.clj:650)
	at clojure.core$use.invokeStatic(core.clj:5860)
	at clojure.core$use.doInvoke(core.clj:5860)
	at clojure.lang.RestFn.invoke(RestFn.java:512)
	at ring.server.standalone$eval19$loading__5569__auto____20.invoke(standalone.clj:1)
	at ring.server.standalone$eval19.invokeStatic(standalone.clj:1)
	at ring.server.standalone$eval19.invoke(standalone.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6916)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.RT.loadResourceScript(RT.java:372)
	at clojure.lang.RT.loadResourceScript(RT.java:363)
	at clojure.lang.RT.load(RT.java:453)
	at clojure.lang.RT.load(RT.java:419)
	at clojure.core$load$fn__5677.invoke(core.clj:5893)
	at clojure.core$load.invokeStatic(core.clj:5892)
	at clojure.core$load.doInvoke(core.clj:5876)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invokeStatic(core.clj:5697)
	at clojure.core$load_one.invoke(core.clj:5692)
	at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)
	at clojure.core$load_lib.invokeStatic(core.clj:5736)
	at clojure.core$load_lib.doInvoke(core.clj:5717)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$load_libs.invokeStatic(core.clj:5774)
	at clojure.core$load_libs.doInvoke(core.clj:5758)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$require.invokeStatic(core.clj:5796)
	at clojure.core$require.doInvoke(core.clj:5796)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at ring.server.leiningen$eval11$loading__5569__auto____12.invoke(leiningen.clj:1)
	at ring.server.leiningen$eval11.invokeStatic(leiningen.clj:1)
	at ring.server.leiningen$eval11.invoke(leiningen.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6916)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.RT.loadResourceScript(RT.java:372)
	at clojure.lang.RT.loadResourceScript(RT.java:363)
	at clojure.lang.RT.load(RT.java:453)
	at clojure.lang.RT.load(RT.java:419)
	at clojure.core$load$fn__5677.invoke(core.clj:5893)
	at clojure.core$load.invokeStatic(core.clj:5892)
	at clojure.core$load.doInvoke(core.clj:5876)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invokeStatic(core.clj:5697)
	at clojure.core$load_one.invoke(core.clj:5692)
	at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)
	at clojure.core$load_lib.invokeStatic(core.clj:5736)
	at clojure.core$load_lib.doInvoke(core.clj:5717)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$load_libs.invokeStatic(core.clj:5774)
	at clojure.core$load_libs.doInvoke(core.clj:5758)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$require.invokeStatic(core.clj:5796)
	at clojure.core$require.doInvoke(core.clj:5796)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at user$eval5.invokeStatic(form-init4419473451210950465.clj:1)
	at user$eval5.invoke(form-init4419473451210950465.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6916)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.Compiler.loadFile(Compiler.java:7317)
	at clojure.main$load_script.invokeStatic(main.clj:275)
	at clojure.main$init_opt.invokeStatic(main.clj:277)
	at clojure.main$init_opt.invoke(main.clj:277)
	at clojure.main$initialize.invokeStatic(main.clj:308)
	at clojure.main$null_opt.invokeStatic(main.clj:342)
	at clojure.main$null_opt.invoke(main.clj:339)
	at clojure.main$main.invokeStatic(main.clj:421)
	at clojure.main$main.doInvoke(main.clj:384)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:383)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.Var.applyTo(Var.java:700)
	at clojure.main.main(main.java:37)
Caused by: java.lang.ExceptionInInitializerError
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at clojure.lang.RT.classForName(RT.java:2168)
	at clojure.lang.RT.classForName(RT.java:2177)
	at clojure.lang.RT.loadClassForName(RT.java:2196)
	at clojure.lang.RT.load(RT.java:443)
	at clojure.lang.RT.load(RT.java:419)
	at clojure.core$load$fn__5677.invoke(core.clj:5893)
	at clojure.core$load.invokeStatic(core.clj:5892)
	at clojure.core$load.doInvoke(core.clj:5876)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invokeStatic(core.clj:5697)
	at clojure.core$load_one.invoke(core.clj:5692)
	at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)
	at clojure.core$load_lib.invokeStatic(core.clj:5736)
	at clojure.core$load_lib.doInvoke(core.clj:5717)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$load_libs.invokeStatic(core.clj:5774)
	at clojure.core$load_libs.doInvoke(core.clj:5758)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$require.invokeStatic(core.clj:5796)
	at clojure.core$require.doInvoke(core.clj:5796)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at instaparse.viz$fn__2529.invoke(viz.clj:5)
	at instaparse.viz__init.load(Unknown Source)
	at instaparse.viz__init.<clinit>(Unknown Source)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at clojure.lang.RT.classForName(RT.java:2168)
	at clojure.lang.RT.classForName(RT.java:2177)
	at clojure.lang.RT.loadClassForName(RT.java:2196)
	at clojure.lang.RT.load(RT.java:443)
	at clojure.lang.RT.load(RT.java:419)
	at clojure.core$load$fn__5677.invoke(core.clj:5893)
	at clojure.core$load.invokeStatic(core.clj:5892)
	at clojure.core$load.doInvoke(core.clj:5876)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invokeStatic(core.clj:5697)
	at clojure.core$load_one.invoke(core.clj:5692)
	at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)
	at clojure.core$load_lib.invokeStatic(core.clj:5736)
	at clojure.core$load_lib.doInvoke(core.clj:5717)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$load_libs.invokeStatic(core.clj:5774)
	at clojure.core$load_libs.doInvoke(core.clj:5758)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$require.invokeStatic(core.clj:5796)
	at clojure.core$require.doInvoke(core.clj:5796)
	at clojure.lang.RestFn.invoke(RestFn.java:930)
	at instaparse.core$loading__4958__auto__.invoke(core.clj:1)
	at instaparse.core__init.load(Unknown Source)
	at instaparse.core__init.<clinit>(Unknown Source)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at clojure.lang.RT.classForName(RT.java:2168)
	at clojure.lang.RT.classForName(RT.java:2177)
	at clojure.lang.RT.loadClassForName(RT.java:2196)
	at clojure.lang.RT.load(RT.java:443)
	at clojure.lang.RT.load(RT.java:419)
	at clojure.core$load$fn__5677.invoke(core.clj:5893)
	at clojure.core$load.invokeStatic(core.clj:5892)
	at clojure.core$load.doInvoke(core.clj:5876)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invokeStatic(core.clj:5697)
	at clojure.core$load_one.invoke(core.clj:5692)
	at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)
	at clojure.core$load_lib.invokeStatic(core.clj:5736)
	at clojure.core$load_lib.doInvoke(core.clj:5717)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$load_libs.invokeStatic(core.clj:5774)
	at clojure.core$load_libs.doInvoke(core.clj:5758)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invokeStatic(core.clj:648)
	at clojure.core$require.invokeStatic(core.clj:5796)
	at clojure.core$require.doInvoke(core.clj:5796)
	at clojure.lang.RestFn.invoke(RestFn.java:436)
	at clout.core$eval1615$loading__5569__auto____1616.invoke(core.clj:1)
	at clout.core$eval1615.invokeStatic(core.clj:1)
	at clout.core$eval1615.invoke(core.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6916)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	... 153 more
Caused by: java.awt.HeadlessException: 
No X11 DISPLAY variable was set, but this program performed an operation which requires it.
	at sun.awt.HeadlessToolkit.getMenuShortcutKeyMask(HeadlessToolkit.java:236)
	at rhizome.viz__init.load(Unknown Source)
	at rhizome.viz__init.<clinit>(Unknown Source)
	... 240 more
Subprocess failed
WARNING: You're currently running as root; probably by accident.
Press control-C to abort or Enter to continue as root.
Set LEIN_ROOT to disable this warning.
2017-06-09 07:39:52.617:INFO::main: Logging initialized @3470ms
2017-06-09 07:41:14.194:INFO::main: Logging initialized @3469ms
Jun 09, 2017 7:41:28 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
Jun 09, 2017 7:41:28 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:1, serverValue:8}] to 127.0.0.1:27017
Jun 09, 2017 7:41:28 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 2, 13]}, minWireVersion=0, maxWireVersion=4, electionId=null, maxDocumentSize=16777216, roundTripTimeNanos=1867612}
2017-06-09 07:41:29.045:INFO:oejs.Server:main: jetty-9.2.10.v20150310
2017-06-09 07:41:29.123:INFO:oejs.ServerConnector:main: Started ServerConnector@4349ce6c{HTTP/1.1}{0.0.0.0:80}
2017-06-09 07:41:29.135:INFO:oejs.Server:main: Started @18399ms
Started server on port 80
2017-06-09 07:43:25.007:WARN:oejh.HttpParser:qtp52688831-16: Illegal character 0x16 in state=START for buffer HeapByteBuffer@3240f4ca[p=1,l=260,c=8192,r=259]={\x16<<<\x03\x01\x00\xFf\x01\x00\x00\xFb\x03\x03Y:Q\x9c\x8dZ6...\x03\x02\x03\x03\x02\x01\x02\x02\x02\x03\x00\x0f\x00\x01\x01>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
2017-06-09 07:43:25.009:WARN:oejh.HttpParser:qtp52688831-16: badMessage: 400 Illegal character 0x16 for HttpChannelOverHttp@4c8dae73{r=0,c=false,a=IDLE,uri=-}
Jun 09, 2017 7:59:06 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:3, serverValue:9}] to 127.0.0.1:27017
Jun 09, 2017 7:59:06 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:5, serverValue:10}] to 127.0.0.1:27017
Jun 09, 2017 7:59:06 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:2, serverValue:12}] to 127.0.0.1:27017
Jun 09, 2017 7:59:06 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:4, serverValue:11}] to 127.0.0.1:27017
2017-06-09 08:05:37.853:INFO::main: Logging initialized @3173ms
Jun 09, 2017 8:05:50 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
Jun 09, 2017 8:05:51 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:1, serverValue:13}] to 127.0.0.1:27017
Jun 09, 2017 8:05:51 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 2, 13]}, minWireVersion=0, maxWireVersion=4, electionId=null, maxDocumentSize=16777216, roundTripTimeNanos=1815241}
2017-06-09 08:05:51.291:INFO:oejs.Server:main: jetty-9.2.10.v20150310
2017-06-09 08:05:51.356:INFO:oejs.ServerConnector:main: Started ServerConnector@ee5579f{HTTP/1.1}{0.0.0.0:80}
2017-06-09 08:05:51.357:INFO:oejs.Server:main: Started @16677ms
Started server on port 80
Jun 09, 2017 8:06:01 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:2, serverValue:15}] to 127.0.0.1:27017
Jun 09, 2017 8:06:01 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:3, serverValue:14}] to 127.0.0.1:27017
Jun 09, 2017 8:06:01 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:5, serverValue:16}] to 127.0.0.1:27017
Jun 09, 2017 8:06:01 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:4, serverValue:17}] to 127.0.0.1:27017
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label The Heros Journey, :events [{:role Hero, :verb at, :place Home} {:role Hero, :verb go_away} {:or [{:verb kill, :role-b Villain, :role-a Hero} {:role Villain, :verb escape}]} {:role Hero, :verb return, :place Home}], :roles (The Hero The Villain), :objects (), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label The Heros Journey, :events [{:role Hero, :verb at, :place Home} {:role Hero, :verb go_away} {:or [{:verb kill, :role-b Villain, :role-a Hero} {:role Villain, :verb escape}]} {:role Hero, :verb return, :place Home}], :roles (The Hero The Villain), :objects (), :locations (Home The Land of Adventure)}
2017-06-09 08:31:00.027:INFO::main: Logging initialized @3449ms
Jun 09, 2017 8:31:14 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
Jun 09, 2017 8:31:14 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:1, serverValue:18}] to 127.0.0.1:27017
Jun 09, 2017 8:31:14 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 2, 13]}, minWireVersion=0, maxWireVersion=4, electionId=null, maxDocumentSize=16777216, roundTripTimeNanos=2074023}
2017-06-09 08:31:14.821:INFO:oejs.Server:main: jetty-9.2.10.v20150310
2017-06-09 08:31:14.911:INFO:oejs.ServerConnector:main: Started ServerConnector@5810e4db{HTTP/1.1}{0.0.0.0:80}
2017-06-09 08:31:14.911:INFO:oejs.Server:main: Started @18334ms
Started server on port 80
Jun 09, 2017 8:31:38 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:2, serverValue:19}] to 127.0.0.1:27017
Jun 09, 2017 8:31:38 AM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:3, serverValue:20}] to 127.0.0.1:27017
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label The Heros Journey, :events [{:role Hero, :verb at, :place Home} {:role Hero, :verb go_away} {:or [{:verb kill, :role-b Villain, :role-a Hero} {:role Villain, :verb escape}]} {:role Hero, :verb return, :place Home}], :roles (The Hero The Villain), :objects (), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label The Heros Journey, :events [{:role Hero, :verb at, :place Home} {:role Hero, :verb go_away} {:or [{:verb kill, :role-b Villain, :role-a Hero} {:role Villain, :verb escape}]} {:role Hero, :verb return, :place Home}], :roles (The Hero The Villain), :objects (), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label The Heros Journey, :events [{:role Hero, :verb at, :place Home} {:role Hero, :verb go_away} {:or [{:verb kill, :role-b Villain, :role-a Hero} {:role Villain, :verb escape}]} {:role Hero, :verb return, :place Home}], :roles (The Hero The Villain), :objects (), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb "go_away", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb go_away, :role Hero}} {:subtrope nil, :phase B, :trigger {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:place "Home", :verb "return", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb "go_away", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb go_away, :role Hero}} {:subtrope nil, :phase B, :trigger {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:place "Home", :verb "return", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb "go_away", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb go_away, :role Hero}} {:subtrope nil, :phase B, :trigger {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:place "Home", :verb "return", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb "go_away", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb go_away, :role Hero}} {:subtrope nil, :phase B, :trigger {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:place "Home", :verb "return", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

2017-06-09 10:13:07.695:WARN:oejh.HttpParser:qtp560332026-16: Illegal character 0x16 in state=START for buffer HeapByteBuffer@6ca26257[p=1,l=260,c=8192,r=259]={\x16<<<\x03\x01\x00\xFf\x01\x00\x00\xFb\x03\x03Y:t\xB3b\x14\xAc...\x03\x02\x03\x03\x02\x01\x02\x02\x02\x03\x00\x0f\x00\x01\x01>>>ebKit/537.36 (KHT...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
2017-06-09 10:13:07.696:WARN:oejh.HttpParser:qtp560332026-16: badMessage: 400 Illegal character 0x16 for HttpChannelOverHttp@53337305{r=0,c=false,a=IDLE,uri=-}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb "go_away", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb go_away, :role Hero}} {:subtrope nil, :phase B, :trigger {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:place "Home", :verb "return", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb "go_away", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb go_away, :role Hero}} {:subtrope nil, :phase B, :trigger {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:place "Home", :verb "return", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb "go_away", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb go_away, :role Hero}} {:subtrope nil, :phase B, :trigger {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:place "Home", :verb "return", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:verb go_away, :role Hero} {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb "go_away", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb go_away, :role Hero}} {:subtrope nil, :phase B, :trigger {:or [{:role-a Hero, :role-b Villain, :verb kill} {:verb escape, :role Villain}]}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:place "Home", :verb "return", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:verb "go_away", :role "Hero"} {:or [{:role-a "Hero", :role-b "Villain", :verb "kill"} {:verb "escape", :role "Villain"}]} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label The Heros Journey, :events [{:role Hero, :verb at, :place Home} {:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb return, :place Home}], :roles (The Hero The Villain), :objects (), :locations (Home Away)}
TMAP:
{:label The Heros Journey, :events [{:role Hero, :verb at, :place Home} {:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb return, :place Home}], :roles (The Hero The Villain), :objects (), :locations (Home Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}})
(nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}})
(nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (), :locations ()}
TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}})
(nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}})
(nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}})
(nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}})
(nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:role Villain, :verb summons, :object Empire} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:object Empire, :verb summons, :role Villain} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:object Empire, :verb summons, :role Villain} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}} {:subtrope nil, :phase "A", :trigger {:object "Empire", :verb "summons", :role "Villain"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}} {:subtrope nil, :phase A, :trigger {:object Empire, :verb summons, :role Villain}})
(nil nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:role Villain, :verb summons, :object Empire} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:object Empire, :verb summons, :role Villain} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:object Empire, :verb summons, :role Villain} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}} {:subtrope nil, :phase "A", :trigger {:object "Empire", :verb "summons", :role "Villain"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}} {:subtrope nil, :phase A, :trigger {:object Empire, :verb summons, :role Villain}})
(nil nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}} {:subtrope nil, :phase "A", :trigger {:object "Empire", :verb "summons", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:obligation {:verb "fight", :role "Villain"}}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}} {:subtrope nil, :phase A, :trigger {:object Empire, :verb summons, :role Villain}} {:subtrope nil, :phase B, :trigger {:obligation {:verb fight, :role Villain}}})
(nil nil nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
(fight(R))
((role(R, villain)))
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:verb fight, :role-b Hero, :role-a Villain} {:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:role-a Villain, :role-b Hero, :verb fight} {:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Hero", :verb "fight"}} {:subtrope nil, :phase "A", :trigger {:object "Empire", :verb "summons", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:obligation {:verb "fight", :role "Villain"}}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Hero, :verb fight}} {:subtrope nil, :phase A, :trigger {:object Empire, :verb summons, :role Villain}} {:subtrope nil, :phase B, :trigger {:obligation {:verb fight, :role Villain}}})
(nil nil nil nil)

({:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
(fight(R))
((role(R, villain)))
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:role-a "Villain", :role-b "Hero", :verb "fight"} {:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Empire", :verb "summons", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:obligation {:verb "fight", :role "Villain"}}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Empire, :verb summons, :role Villain}} {:subtrope nil, :phase A, :trigger {:obligation {:verb fight, :role Villain}}})
(nil nil nil)

({:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
(fight(R))
((role(R, villain)))
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

Retrieving tropic/tropic/0.9.8/tropic-0.9.8.pom from clojars
Retrieving tropic/tropic/0.9.8/tropic-0.9.8.jar from clojars
2017-06-09 12:17:44.860:INFO::main: Logging initialized @3233ms
Jun 09, 2017 12:17:58 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
Jun 09, 2017 12:17:59 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:1, serverValue:21}] to 127.0.0.1:27017
Jun 09, 2017 12:17:59 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 2, 13]}, minWireVersion=0, maxWireVersion=4, electionId=null, maxDocumentSize=16777216, roundTripTimeNanos=11020083}
2017-06-09 12:17:59.534:INFO:oejs.Server:main: jetty-9.2.10.v20150310
2017-06-09 12:17:59.596:INFO:oejs.ServerConnector:main: Started ServerConnector@ee5579f{HTTP/1.1}{0.0.0.0:80}
2017-06-09 12:17:59.599:INFO:oejs.Server:main: Started @17972ms
Started server on port 80
2017-06-09 12:18:04.209:INFO::main: Logging initialized @3325ms
2017-06-09 12:18:05.318:INFO::main: Logging initialized @3248ms
Jun 09, 2017 12:18:17 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
Jun 09, 2017 12:18:17 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:1, serverValue:22}] to 127.0.0.1:27017
Jun 09, 2017 12:18:17 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 2, 13]}, minWireVersion=0, maxWireVersion=4, electionId=null, maxDocumentSize=16777216, roundTripTimeNanos=1884316}
2017-06-09 12:18:17.911:INFO:oejs.Server:main: jetty-9.2.10.v20150310
2017-06-09 12:18:17.965:WARN:oejuc.AbstractLifeCycle:main: FAILED ServerConnector@43f41fe0{HTTP/1.1}{0.0.0.0:80}: java.net.BindException: Address already in use
java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:321)
	at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
	at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:236)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.server.Server.doStart(Server.java:366)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at ring.adapter.jetty$run_jetty.invokeStatic(jetty.clj:127)
	at ring.adapter.jetty$run_jetty.invoke(jetty.clj:94)
	at ring.server.standalone$serve$fn__2352.invoke(standalone.clj:102)
	at ring.server.standalone$try_port.invokeStatic(standalone.clj:15)
	at ring.server.standalone$try_port.invoke(standalone.clj:10)
	at ring.server.standalone$serve.invokeStatic(standalone.clj:99)
	at ring.server.standalone$serve.doInvoke(standalone.clj:75)
	at clojure.lang.RestFn.invoke(RestFn.java:423)
	at ring.server.leiningen$serve.invokeStatic(leiningen.clj:13)
	at ring.server.leiningen$serve.invoke(leiningen.clj:10)
	at user$eval3853.invokeStatic(form-init5151475817968150892.clj:1)
	at user$eval3853.invoke(form-init5151475817968150892.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6917)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.Compiler.loadFile(Compiler.java:7317)
	at clojure.main$load_script.invokeStatic(main.clj:275)
	at clojure.main$init_opt.invokeStatic(main.clj:277)
	at clojure.main$init_opt.invoke(main.clj:277)
	at clojure.main$initialize.invokeStatic(main.clj:308)
	at clojure.main$null_opt.invokeStatic(main.clj:342)
	at clojure.main$null_opt.invoke(main.clj:339)
	at clojure.main$main.invokeStatic(main.clj:421)
	at clojure.main$main.doInvoke(main.clj:384)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:383)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.Var.applyTo(Var.java:700)
	at clojure.main.main(main.java:37)
2017-06-09 12:18:17.967:WARN:oejuc.AbstractLifeCycle:main: FAILED org.eclipse.jetty.server.Server@785877ec: java.net.BindException: Address already in use
java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:321)
	at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
	at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:236)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.server.Server.doStart(Server.java:366)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at ring.adapter.jetty$run_jetty.invokeStatic(jetty.clj:127)
	at ring.adapter.jetty$run_jetty.invoke(jetty.clj:94)
	at ring.server.standalone$serve$fn__2352.invoke(standalone.clj:102)
	at ring.server.standalone$try_port.invokeStatic(standalone.clj:15)
	at ring.server.standalone$try_port.invoke(standalone.clj:10)
	at ring.server.standalone$serve.invokeStatic(standalone.clj:99)
	at ring.server.standalone$serve.doInvoke(standalone.clj:75)
	at clojure.lang.RestFn.invoke(RestFn.java:423)
	at ring.server.leiningen$serve.invokeStatic(leiningen.clj:13)
	at ring.server.leiningen$serve.invoke(leiningen.clj:10)
	at user$eval3853.invokeStatic(form-init5151475817968150892.clj:1)
	at user$eval3853.invoke(form-init5151475817968150892.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6917)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.Compiler.loadFile(Compiler.java:7317)
	at clojure.main$load_script.invokeStatic(main.clj:275)
	at clojure.main$init_opt.invokeStatic(main.clj:277)
	at clojure.main$init_opt.invoke(main.clj:277)
	at clojure.main$initialize.invokeStatic(main.clj:308)
	at clojure.main$null_opt.invokeStatic(main.clj:342)
	at clojure.main$null_opt.invoke(main.clj:339)
	at clojure.main$main.invokeStatic(main.clj:421)
	at clojure.main$main.doInvoke(main.clj:384)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:383)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.Var.applyTo(Var.java:700)
	at clojure.main.main(main.java:37)
2017-06-09 12:18:17.973:INFO:oejs.ServerConnector:main: Stopped ServerConnector@43f41fe0{HTTP/1.1}{0.0.0.0:80}
Exception in thread "main" java.net.BindException: Address already in use, compiling:(/tmp/form-init5151475817968150892.clj:1:73)
	at clojure.lang.Compiler.load(Compiler.java:7391)
	at clojure.lang.Compiler.loadFile(Compiler.java:7317)
	at clojure.main$load_script.invokeStatic(main.clj:275)
	at clojure.main$init_opt.invokeStatic(main.clj:277)
	at clojure.main$init_opt.invoke(main.clj:277)
	at clojure.main$initialize.invokeStatic(main.clj:308)
	at clojure.main$null_opt.invokeStatic(main.clj:342)
	at clojure.main$null_opt.invoke(main.clj:339)
	at clojure.main$main.invokeStatic(main.clj:421)
	at clojure.main$main.doInvoke(main.clj:384)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:383)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.Var.applyTo(Var.java:700)
	at clojure.main.main(main.java:37)
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:321)
	at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
	at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:236)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.server.Server.doStart(Server.java:366)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at ring.adapter.jetty$run_jetty.invokeStatic(jetty.clj:127)
	at ring.adapter.jetty$run_jetty.invoke(jetty.clj:94)
	at ring.server.standalone$serve$fn__2352.invoke(standalone.clj:102)
	at ring.server.standalone$try_port.invokeStatic(standalone.clj:15)
	at ring.server.standalone$try_port.invoke(standalone.clj:10)
	at ring.server.standalone$serve.invokeStatic(standalone.clj:99)
	at ring.server.standalone$serve.doInvoke(standalone.clj:75)
	at clojure.lang.RestFn.invoke(RestFn.java:423)
	at ring.server.leiningen$serve.invokeStatic(leiningen.clj:13)
	at ring.server.leiningen$serve.invoke(leiningen.clj:10)
	at user$eval3853.invokeStatic(form-init5151475817968150892.clj:1)
	at user$eval3853.invoke(form-init5151475817968150892.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6917)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	... 14 more
Subprocess failed
Jun 09, 2017 12:18:18 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
Jun 09, 2017 12:18:18 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:1, serverValue:23}] to 127.0.0.1:27017
Jun 09, 2017 12:18:18 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 2, 13]}, minWireVersion=0, maxWireVersion=4, electionId=null, maxDocumentSize=16777216, roundTripTimeNanos=4120867}
2017-06-09 12:18:18.870:INFO:oejs.Server:main: jetty-9.2.10.v20150310
2017-06-09 12:18:18.921:WARN:oejuc.AbstractLifeCycle:main: FAILED ServerConnector@43f41fe0{HTTP/1.1}{0.0.0.0:80}: java.net.BindException: Address already in use
java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:321)
	at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
	at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:236)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.server.Server.doStart(Server.java:366)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at ring.adapter.jetty$run_jetty.invokeStatic(jetty.clj:127)
	at ring.adapter.jetty$run_jetty.invoke(jetty.clj:94)
	at ring.server.standalone$serve$fn__2352.invoke(standalone.clj:102)
	at ring.server.standalone$try_port.invokeStatic(standalone.clj:15)
	at ring.server.standalone$try_port.invoke(standalone.clj:10)
	at ring.server.standalone$serve.invokeStatic(standalone.clj:99)
	at ring.server.standalone$serve.doInvoke(standalone.clj:75)
	at clojure.lang.RestFn.invoke(RestFn.java:423)
	at ring.server.leiningen$serve.invokeStatic(leiningen.clj:13)
	at ring.server.leiningen$serve.invoke(leiningen.clj:10)
	at user$eval3853.invokeStatic(form-init6216340021580988877.clj:1)
	at user$eval3853.invoke(form-init6216340021580988877.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6917)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.Compiler.loadFile(Compiler.java:7317)
	at clojure.main$load_script.invokeStatic(main.clj:275)
	at clojure.main$init_opt.invokeStatic(main.clj:277)
	at clojure.main$init_opt.invoke(main.clj:277)
	at clojure.main$initialize.invokeStatic(main.clj:308)
	at clojure.main$null_opt.invokeStatic(main.clj:342)
	at clojure.main$null_opt.invoke(main.clj:339)
	at clojure.main$main.invokeStatic(main.clj:421)
	at clojure.main$main.doInvoke(main.clj:384)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:383)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.Var.applyTo(Var.java:700)
	at clojure.main.main(main.java:37)
2017-06-09 12:18:18.923:WARN:oejuc.AbstractLifeCycle:main: FAILED org.eclipse.jetty.server.Server@785877ec: java.net.BindException: Address already in use
java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:321)
	at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
	at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:236)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.server.Server.doStart(Server.java:366)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at ring.adapter.jetty$run_jetty.invokeStatic(jetty.clj:127)
	at ring.adapter.jetty$run_jetty.invoke(jetty.clj:94)
	at ring.server.standalone$serve$fn__2352.invoke(standalone.clj:102)
	at ring.server.standalone$try_port.invokeStatic(standalone.clj:15)
	at ring.server.standalone$try_port.invoke(standalone.clj:10)
	at ring.server.standalone$serve.invokeStatic(standalone.clj:99)
	at ring.server.standalone$serve.doInvoke(standalone.clj:75)
	at clojure.lang.RestFn.invoke(RestFn.java:423)
	at ring.server.leiningen$serve.invokeStatic(leiningen.clj:13)
	at ring.server.leiningen$serve.invoke(leiningen.clj:10)
	at user$eval3853.invokeStatic(form-init6216340021580988877.clj:1)
	at user$eval3853.invoke(form-init6216340021580988877.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6917)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.Compiler.loadFile(Compiler.java:7317)
	at clojure.main$load_script.invokeStatic(main.clj:275)
	at clojure.main$init_opt.invokeStatic(main.clj:277)
	at clojure.main$init_opt.invoke(main.clj:277)
	at clojure.main$initialize.invokeStatic(main.clj:308)
	at clojure.main$null_opt.invokeStatic(main.clj:342)
	at clojure.main$null_opt.invoke(main.clj:339)
	at clojure.main$main.invokeStatic(main.clj:421)
	at clojure.main$main.doInvoke(main.clj:384)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:383)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.Var.applyTo(Var.java:700)
	at clojure.main.main(main.java:37)
2017-06-09 12:18:18.929:INFO:oejs.ServerConnector:main: Stopped ServerConnector@43f41fe0{HTTP/1.1}{0.0.0.0:80}
Exception in thread "main" java.net.BindException: Address already in use, compiling:(/tmp/form-init6216340021580988877.clj:1:73)
	at clojure.lang.Compiler.load(Compiler.java:7391)
	at clojure.lang.Compiler.loadFile(Compiler.java:7317)
	at clojure.main$load_script.invokeStatic(main.clj:275)
	at clojure.main$init_opt.invokeStatic(main.clj:277)
	at clojure.main$init_opt.invoke(main.clj:277)
	at clojure.main$initialize.invokeStatic(main.clj:308)
	at clojure.main$null_opt.invokeStatic(main.clj:342)
	at clojure.main$null_opt.invoke(main.clj:339)
	at clojure.main$main.invokeStatic(main.clj:421)
	at clojure.main$main.doInvoke(main.clj:384)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:383)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.Var.applyTo(Var.java:700)
	at clojure.main.main(main.java:37)
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:321)
	at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
	at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:236)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.server.Server.doStart(Server.java:366)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at ring.adapter.jetty$run_jetty.invokeStatic(jetty.clj:127)
	at ring.adapter.jetty$run_jetty.invoke(jetty.clj:94)
	at ring.server.standalone$serve$fn__2352.invoke(standalone.clj:102)
	at ring.server.standalone$try_port.invokeStatic(standalone.clj:15)
	at ring.server.standalone$try_port.invoke(standalone.clj:10)
	at ring.server.standalone$serve.invokeStatic(standalone.clj:99)
	at ring.server.standalone$serve.doInvoke(standalone.clj:75)
	at clojure.lang.RestFn.invoke(RestFn.java:423)
	at ring.server.leiningen$serve.invokeStatic(leiningen.clj:13)
	at ring.server.leiningen$serve.invoke(leiningen.clj:10)
	at user$eval3853.invokeStatic(form-init6216340021580988877.clj:1)
	at user$eval3853.invoke(form-init6216340021580988877.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6927)
	at clojure.lang.Compiler.eval(Compiler.java:6917)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	... 14 more
Subprocess failed
2017-06-09 12:18:56.282:INFO::main: Logging initialized @3142ms
Jun 09, 2017 12:19:09 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
Jun 09, 2017 12:19:09 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:1, serverValue:24}] to 127.0.0.1:27017
Jun 09, 2017 12:19:09 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 2, 13]}, minWireVersion=0, maxWireVersion=4, electionId=null, maxDocumentSize=16777216, roundTripTimeNanos=1892035}
2017-06-09 12:19:09.963:INFO:oejs.Server:main: jetty-9.2.10.v20150310
2017-06-09 12:19:10.023:INFO:oejs.ServerConnector:main: Started ServerConnector@ee5579f{HTTP/1.1}{0.0.0.0:80}
2017-06-09 12:19:10.025:INFO:oejs.Server:main: Started @16885ms
Started server on port 80
Jun 09, 2017 12:23:46 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:5, serverValue:25}] to 127.0.0.1:27017
Jun 09, 2017 12:23:46 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:2, serverValue:26}] to 127.0.0.1:27017
Jun 09, 2017 12:23:46 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:4, serverValue:28}] to 127.0.0.1:27017
Jun 09, 2017 12:23:46 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:3, serverValue:27}] to 127.0.0.1:27017
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Empire", :verb "summons", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:obligation {:verb "fight", :role "Villain"}}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Empire, :verb summons, :role Villain}} {:subtrope nil, :phase A, :trigger {:obligation {:verb fight, :role Villain}}})
(nil nil nil)

({:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
(fight(R))
((role(R, villain)))
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Empire", :verb "summons", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:obligation {:verb "fight", :role "Villain"}}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Empire, :verb summons, :role Villain}} {:subtrope nil, :phase A, :trigger {:obligation {:verb fight, :role Villain}}})
(nil nil nil)

({:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
(fight(R))
((role(R, villain)))
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Empire", :verb "summons", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:obligation {:verb "fight", :role "Villain"}}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Empire, :verb summons, :role Villain}} {:subtrope nil, :phase A, :trigger {:obligation {:verb fight, :role Villain}}})
(nil nil nil)

({:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
(fight(R))
((role(R, villain)))
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events nil, :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events nil, :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events nil, :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Hero, :verb nil}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb nil, :role Hero}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb nil, :role Hero}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
java.lang.NullPointerException: null
           string.clj:101 clojure.string/replace
            string.clj:75 clojure.string/replace
            instal.clj:33 tropic.instal/event-name
            instal.clj:45 tropic.instal/inst-name
            core.clj:2644 clojure.core/map[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:56 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
            core.clj:2648 clojure.core/map[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:56 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
             core.clj:715 clojure.core/concat[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:49 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
             core.clj:911 clojure.core/reduce1
            core.clj:3983 clojure.core/set
            core.clj:3975 clojure.core/set
           instal.clj:544 tropic.instal/inst-events
           instal.clj:928 tropic.instal/instal[fn]
            core.clj:2644 clojure.core/map[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:49 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
             core.clj:641 clojure.core/apply
            core.clj:2674 clojure.core/mapcat
            core.clj:2674 clojure.core/mapcat
          RestFn.java:423 clojure.lang.RestFn.invoke
           instal.clj:928 tropic.instal/instal
           instal.clj:945 tropic.instal/instal-file
            solver.clj:55 tropic.solver/make-instal[fn]
            core.clj:2644 clojure.core/map[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:49 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
            core.clj:3024 clojure.core/dorun
            core.clj:3024 clojure.core/dorun
            solver.clj:55 tropic.solver/make-instal
           solver.clj:121 tropic.solver/make-story
        datastore.clj:107 story-server.datastore/new-story
        datastore.clj:100 story-server.datastore/new-story
           handler.clj:17 story-server.handler/fn
           handler.clj:17 story-server.handler/fn
             core.clj:135 compojure.core/make-route[fn]
             core.clj:122 compojure.core/wrap-route-middleware[fn]
             core.clj:126 compojure.core/wrap-route-info[fn]
              core.clj:45 compojure.core/if-route[fn]
              core.clj:27 compojure.core/if-method[fn]
             core.clj:151 compojure.core/routing[fn]
            core.clj:2592 clojure.core/some
            core.clj:2583 clojure.core/some
             core.clj:151 compojure.core/routing
             core.clj:148 compojure.core/routing
          RestFn.java:139 clojure.lang.RestFn.applyTo
             core.clj:648 clojure.core/apply
             core.clj:641 clojure.core/apply
             core.clj:156 compojure.core/routes[fn]
           handler.clj:57 story-server.handler/all-cors[fn]
    keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
              json.clj:72 ring.middleware.json/wrap-json-params[fn]
              json.clj:87 ring.middleware.json/wrap-json-response[fn]
             Var.java:379 clojure.lang.Var.invoke
            reload.clj:22 ring.middleware.reload/wrap-reload[fn]
        stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
        stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
             jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
         (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
   HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
          Server.java:497 org.eclipse.jetty.server.Server.handle
     HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
  HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
          Thread.java:748 java.lang.Thread.run
TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Hero, :verb nil}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb nil, :role Hero}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb nil, :role Hero}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
java.lang.NullPointerException: null
           string.clj:101 clojure.string/replace
            string.clj:75 clojure.string/replace
            instal.clj:33 tropic.instal/event-name
            instal.clj:45 tropic.instal/inst-name
            core.clj:2644 clojure.core/map[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:56 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
            core.clj:2648 clojure.core/map[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:56 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
             core.clj:715 clojure.core/concat[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:49 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
             core.clj:911 clojure.core/reduce1
            core.clj:3983 clojure.core/set
            core.clj:3975 clojure.core/set
           instal.clj:544 tropic.instal/inst-events
           instal.clj:928 tropic.instal/instal[fn]
            core.clj:2644 clojure.core/map[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:49 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
             core.clj:641 clojure.core/apply
            core.clj:2674 clojure.core/mapcat
            core.clj:2674 clojure.core/mapcat
          RestFn.java:423 clojure.lang.RestFn.invoke
           instal.clj:928 tropic.instal/instal
           instal.clj:945 tropic.instal/instal-file
            solver.clj:55 tropic.solver/make-instal[fn]
            core.clj:2644 clojure.core/map[fn]
          LazySeq.java:40 clojure.lang.LazySeq.sval
          LazySeq.java:49 clojure.lang.LazySeq.seq
              RT.java:521 clojure.lang.RT.seq
             core.clj:137 clojure.core/seq
            core.clj:3024 clojure.core/dorun
            core.clj:3024 clojure.core/dorun
            solver.clj:55 tropic.solver/make-instal
           solver.clj:121 tropic.solver/make-story
        datastore.clj:107 story-server.datastore/new-story
        datastore.clj:100 story-server.datastore/new-story
           handler.clj:17 story-server.handler/fn
           handler.clj:17 story-server.handler/fn
             core.clj:135 compojure.core/make-route[fn]
             core.clj:122 compojure.core/wrap-route-middleware[fn]
             core.clj:126 compojure.core/wrap-route-info[fn]
              core.clj:45 compojure.core/if-route[fn]
              core.clj:27 compojure.core/if-method[fn]
             core.clj:151 compojure.core/routing[fn]
            core.clj:2592 clojure.core/some
            core.clj:2583 clojure.core/some
             core.clj:151 compojure.core/routing
             core.clj:148 compojure.core/routing
          RestFn.java:139 clojure.lang.RestFn.applyTo
             core.clj:648 clojure.core/apply
             core.clj:641 clojure.core/apply
             core.clj:156 compojure.core/routes[fn]
           handler.clj:57 story-server.handler/all-cors[fn]
    keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
              json.clj:72 ring.middleware.json/wrap-json-params[fn]
              json.clj:87 ring.middleware.json/wrap-json-response[fn]
             Var.java:379 clojure.lang.Var.invoke
            reload.clj:22 ring.middleware.reload/wrap-reload[fn]
        stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
        stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
             jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
         (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
   HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
          Server.java:497 org.eclipse.jetty.server.Server.handle
     HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
  HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
          Thread.java:748 java.lang.Thread.run
TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Empire", :verb "summons", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:obligation {:verb "fight", :role "Villain"}}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Empire, :verb summons, :role Villain}} {:subtrope nil, :phase A, :trigger {:obligation {:verb fight, :role Villain}}})
(nil nil nil)

({:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
(fight(R))
((role(R, villain)))
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Empire", :verb "summons", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:obligation {:verb "fight", :role "Villain"}}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Empire, :verb summons, :role Villain}} {:subtrope nil, :phase A, :trigger {:obligation {:verb fight, :role Villain}}})
(nil nil nil)

({:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"})

OS:
(fight(R))
((role(R, villain)))
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain} {:role Hero, :verb destroy, :object Empire}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill} {:object Empire, :verb destroy, :role Hero}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a5d4853c7f03e8e2dbb60, :label Evil Empire, :events [{:object Empire, :verb summons, :role Villain} {:obligation {:verb fight, :role Villain}} {:or [{:verb escape, :role Hero} {:role-a Villain, :role-b Hero, :verb kill} {:object Empire, :verb destroy, :role Hero}]}], :subverted false, :places [], :objects [{:id The Empire, :label The Empire, :type The Empire}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Empire", :verb "summons", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:obligation {:verb "fight", :role "Villain"}}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Empire, :verb summons, :role Villain}} {:subtrope nil, :phase A, :trigger {:obligation {:verb fight, :role Villain}}})
(nil nil nil)

({:object "Empire", :verb "summons", :role "Villain"} {:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"} {:object "Empire", :verb "destroy", :role "Hero"})

OS:
(fight(R))
((role(R, villain)))
hey
[{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"} {:object "Empire", :verb "destroy", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a5d4853c7f03e8e2dbb60", :label "Evil Empire", :events [{:object "Empire", :verb "summons", :role "Villain"} {:obligation {:verb "fight", :role "Villain"}} {:or [{:verb "escape", :role "Hero"} {:role-a "Villain", :role-b "Hero", :verb "kill"} {:object "Empire", :verb "destroy", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Empire", :label "The Empire", :type "The Empire"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain} {:role Hero, :verb destroy, :object Empire}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label The Heros Journey, :events [{:role Hero, :verb at, :place Home} {:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb return, :place Home}], :roles (The Hero The Villain), :objects (), :locations (Home Away)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Example 1, :events [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero), :objects (The Sword), :locations (The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 1, :events [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero), :objects (The Sword), :locations (The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}]}], :roles (The Hero), :objects (The Sword), :locations (The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}]}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}]}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}]}], :roles (The Hero), :objects (The Sword), :locations (The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}]}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}]}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go, :place Home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}]}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go, :place Home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}]}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb go, :place Land of Adventure} {:role Hero, :verb find, :object Sword} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}})
(nil nil)

({:place "Home", :verb "go", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb go, :place Land of Adventure} {:role Hero, :verb find, :object Sword} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Example 3, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9aec53c7f0153e5157ae, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9aec53c7f0153e5157ae, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9aec53c7f0153e5157ae", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9aec53c7f0153e5157ae", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Example 3, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Item Search, :events [{:role Hero, :verb chase, :object Macguffin} {:or [{:role Hero, :verb find, :object Macguffin} {:role Hero, :verb go, :place Home}]}], :roles (The Hero), :objects (The Macguffin), :locations (Home)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb chase, :object Macguffin} {:or [{:role Hero, :verb find, :object Macguffin} {:role Hero, :verb go, :place Home}]}], :roles (The Hero), :objects (The Macguffin), :locations (Home)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Item Search}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:object "Macguffin", :verb "chase", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"})

OS:
()
()
hey
[{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"} {:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

BRIDGE: []

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}]

SUBTROPE: {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Item Search}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label The Heros Journey, :events [{:role Hero, :verb at, :place Home} {:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb return, :place Home}], :roles (The Hero The Villain), :objects (), :locations (Home Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a582b53c7f03bda5ca93c, :label The Heros Journey, :events [{:place Home, :verb at, :role Hero} {:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Home, :verb return, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "at", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb at, :role Hero}} {:subtrope nil, :phase A, :trigger {:place Away, :verb go, :role Hero}} {:subtrope nil, :phase B, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil)

({:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"})

OS:
()
()
hey
[{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:id "593a582b53c7f03bda5ca93c", :label "The Heros Journey", :events [{:place "Home", :verb "at", :role "Hero"} {:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Home", :verb "return", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: []

TMAP:
{:label Evil Empire, :events [{:role Villain, :verb summons, :object Empire} {:obligation {:role Villain, :verb fight}} {:or [{:role Hero, :verb escape} {:verb kill, :role-b Hero, :role-a Villain} {:role Hero, :verb destroy, :object Empire}]}], :roles (The Hero The Villain), :objects (The Empire), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}})
(nil nil)

({:place "Home", :verb "go", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]} {:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

Retrieving tropic/tropic/0.9.9/tropic-0.9.9.pom from clojars
Retrieving tropic/tropic/0.9.9/tropic-0.9.9.jar from clojars
2017-06-09 13:33:59.994:INFO::main: Logging initialized @3187ms
Jun 09, 2017 1:34:13 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
Jun 09, 2017 1:34:13 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:1, serverValue:29}] to 127.0.0.1:27017
Jun 09, 2017 1:34:13 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 2, 13]}, minWireVersion=0, maxWireVersion=4, electionId=null, maxDocumentSize=16777216, roundTripTimeNanos=8495988}
2017-06-09 13:34:13.986:INFO:oejs.Server:main: jetty-9.2.10.v20150310
2017-06-09 13:34:14.056:INFO:oejs.ServerConnector:main: Started ServerConnector@ee5579f{HTTP/1.1}{0.0.0.0:80}
2017-06-09 13:34:14.062:INFO:oejs.Server:main: Started @17255ms
Started server on port 80
Jun 09, 2017 1:34:28 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:5, serverValue:30}] to 127.0.0.1:27017
Jun 09, 2017 1:34:28 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:2, serverValue:31}] to 127.0.0.1:27017
Jun 09, 2017 1:34:28 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:4, serverValue:32}] to 127.0.0.1:27017
Jun 09, 2017 1:34:28 PM com.mongodb.diagnostics.logging.JULLogger log
INFO: Opened connection [connectionId{localValue:3, serverValue:33}] to 127.0.0.1:27017
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}})
(nil nil)

({:place "Home", :verb "go", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9aec53c7f0153e5157ae, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9aec53c7f0153e5157ae, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9aec53c7f0153e5157ae", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9aec53c7f0153e5157ae", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
FIRT EVESTNE:
({:place "Away", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, away)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:object "Macguffin", :verb "chase", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"})

OS:
()
()
hey
[{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"} {:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

BRIDGE: []

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}]

SUBTROPE: {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}})
(nil nil)

({:place "Home", :verb "go", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]} {:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero} {:or [{:place Land of Adventure, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}})
(nil nil)

({:place "Home", :verb "go", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go, :place Home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go, :place Home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:role Hero, :verb go, :place Home}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, S)) if role(R, hero), place(S, home)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:role Hero, :verb go, :place Home}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, S)) if role(R, hero), place(S, home)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go, :place Home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go, :place Home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 1, :events [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero), :objects (The Sword), :locations (The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 1, :events [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero), :objects (The Sword), :locations (The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go, :place Home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9aec53c7f0153e5157ae, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9aec53c7f0153e5157ae, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9aec53c7f0153e5157ae", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9aec53c7f0153e5157ae", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Example 3, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
FIRT EVESTNE:
({:place "Away", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, away)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:place "Home", :verb "go", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"} {:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

BRIDGE: []

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}]

SUBTROPE: {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
2017-06-09 14:23:52.735:WARN:oejh.HttpParser:qtp560332026-18: Illegal character 0xAD in state=METHOD for buffer HeapByteBuffer@6714e29b[p=6,l=173,c=8192,r=167]={Gh0st\xAd<<<\x00\x00\x00\xE0\x00\x00\x00x\x9cKS``\x98\xC3\xC0\xC0...==\\\x9d\x19\x88\x00\xE5 \x02\x00T\xF5+\\>>>: X-Requested-Wit...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
2017-06-09 14:23:52.739:WARN:oejh.HttpParser:qtp560332026-18: badMessage: 400 Illegal character 0xAD for HttpChannelOverHttp@322dc72f{r=0,c=false,a=IDLE,uri=-}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb chase, :object Macguffin} {:or [{:role Hero, :verb find, :object Macguffin} {:role Hero, :verb go, :place Home}]}], :roles (The Hero), :objects (The Macguffin), :locations (Home)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb chase, :object Macguffin} {:or [{:role Hero, :verb find, :object Macguffin} {:role Hero, :verb go, :place Home}]}], :roles (The Hero), :objects (The Macguffin), :locations (Home)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9b2a53c7f0153e5157b1, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9b2a53c7f0153e5157b1", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb chase, :object Macguffin} {:or [{:role Hero, :verb find, :object Macguffin} {:role Hero, :verb go, :place Home}]}], :roles (The Hero), :objects (The Macguffin), :locations (Home)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Item Search}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
FIRT EVESTNE:
({:place "Away", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, away)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:object "Macguffin", :verb "chase", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"})

OS:
()
()
hey
[{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"} {:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

BRIDGE: []

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}]

SUBTROPE: {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Item Search}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
FIRT EVESTNE:
({:place "Away", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, away)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:object "Macguffin", :verb "chase", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"})

OS:
()
()
hey
[{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"} {:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

BRIDGE: []

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}]

SUBTROPE: {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Item Search}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
FIRT EVESTNE:
({:place "Away", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, away)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:object "Macguffin", :verb "chase", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"})

OS:
()
()
hey
[{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"} {:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

BRIDGE: []

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}]

SUBTROPE: {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593a9b2a53c7f0153e5157b1"}

[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593a9b2a53c7f0153e5157b1}]
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Example 1}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Example 1}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Example 1}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Example 1}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
FIRT EVESTNE:
({:place "Away", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, away)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:verb "go_home", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Example 1"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"} {:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Example 1"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}

BRIDGE: []

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Example 1"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}]

SUBTROPE: {:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}

[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Example 1}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}]
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Example 1}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Example 1}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4} {:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Example 1}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Example 1}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
FIRT EVESTNE:
({:place "Away", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, away)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:verb "go_home", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Example 1"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"} {:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Example 1"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}

BRIDGE: []

{:id "593a9b4a53c7f0153e5157b4", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Example 1"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}]

SUBTROPE: {:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}

[{:id 593a9b4a53c7f0153e5157b4, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Example 1}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}]
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Example 1}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Example 4, :events [{:role Villain, :verb nil, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label New trope, :events [{:role Villain, :verb nil, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
java.lang.IllegalArgumentException: invalid hexadecimal representation of an ObjectId: []
             ObjectId.java:523 org.bson.types.ObjectId.parseHexString
             ObjectId.java:237 org.bson.types.ObjectId.<init>
              datastore.clj:84 story-server.datastore/edit-trope
              datastore.clj:82 story-server.datastore/edit-trope
                handler.clj:14 story-server.handler/fn
                handler.clj:14 story-server.handler/fn
                  core.clj:135 compojure.core/make-route[fn]
                  core.clj:122 compojure.core/wrap-route-middleware[fn]
                  core.clj:126 compojure.core/wrap-route-info[fn]
                   core.clj:45 compojure.core/if-route[fn]
                   core.clj:27 compojure.core/if-method[fn]
                  core.clj:151 compojure.core/routing[fn]
                 core.clj:2592 clojure.core/some
                 core.clj:2583 clojure.core/some
                  core.clj:151 compojure.core/routing
                  core.clj:148 compojure.core/routing
               RestFn.java:139 clojure.lang.RestFn.applyTo
                  core.clj:648 clojure.core/apply
                  core.clj:641 clojure.core/apply
                  core.clj:156 compojure.core/routes[fn]
                handler.clj:57 story-server.handler/all-cors[fn]
         keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                   json.clj:72 ring.middleware.json/wrap-json-params[fn]
                   json.clj:87 ring.middleware.json/wrap-json-response[fn]
                  Var.java:379 clojure.lang.Var.invoke
                 reload.clj:22 ring.middleware.reload/wrap-reload[fn]
             stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
             stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                  jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
              (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
        HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
               Server.java:497 org.eclipse.jetty.server.Server.handle
          HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
       HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
   AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
     QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
     QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
               Thread.java:748 java.lang.Thread.run
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
java.lang.IllegalArgumentException: invalid hexadecimal representation of an ObjectId: []
             ObjectId.java:523 org.bson.types.ObjectId.parseHexString
             ObjectId.java:237 org.bson.types.ObjectId.<init>
              datastore.clj:84 story-server.datastore/edit-trope
              datastore.clj:82 story-server.datastore/edit-trope
                handler.clj:14 story-server.handler/fn
                handler.clj:14 story-server.handler/fn
                  core.clj:135 compojure.core/make-route[fn]
                  core.clj:122 compojure.core/wrap-route-middleware[fn]
                  core.clj:126 compojure.core/wrap-route-info[fn]
                   core.clj:45 compojure.core/if-route[fn]
                   core.clj:27 compojure.core/if-method[fn]
                  core.clj:151 compojure.core/routing[fn]
                 core.clj:2592 clojure.core/some
                 core.clj:2583 clojure.core/some
                  core.clj:151 compojure.core/routing
                  core.clj:148 compojure.core/routing
               RestFn.java:139 clojure.lang.RestFn.applyTo
                  core.clj:648 clojure.core/apply
                  core.clj:641 clojure.core/apply
                  core.clj:156 compojure.core/routes[fn]
                handler.clj:57 story-server.handler/all-cors[fn]
         keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                   json.clj:72 ring.middleware.json/wrap-json-params[fn]
                   json.clj:87 ring.middleware.json/wrap-json-response[fn]
                  Var.java:379 clojure.lang.Var.invoke
                 reload.clj:22 ring.middleware.reload/wrap-reload[fn]
             stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
             stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                  jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
              (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
        HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
               Server.java:497 org.eclipse.jetty.server.Server.handle
          HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
       HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
   AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
     QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
     QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
               Thread.java:748 java.lang.Thread.run
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb nil, :role "Villain"})

("perm((S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb nil, :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb nil, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb nil, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb nil, :role "Villain"})

("perm((S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb nil, :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb nil, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Hero, :verb go, :place Home}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, S)) if role(R, hero), place(S, home)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Hero, :verb go, :place Home}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, S)) if role(R, hero), place(S, home)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb nil, :role "Villain"})

("perm((S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb nil, :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb nil, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb nil, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb nil, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb nil, :role "Villain"})

("perm((S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb nil, :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb nil, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb nil, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb nil, :role "Villain"})

("perm((S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb nil, :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb nil, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb nil, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb nil, :role "Villain"})

("perm((S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb nil, :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb nil, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb nil, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb nil, :role "Villain"})

("perm((S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb nil, :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb nil, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb nil, :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, U)) if role(S, villain), place(U, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase B, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events nil, :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events nil, :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events nil, :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
(nil)

("perm(()) if ")

SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events nil, :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events nil, :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events nil, :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events nil, :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events nil, :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
(nil)

("perm(()) if ")

SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events nil, :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events nil, :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, V)) if role(S, villain), place(V, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, V)) if role(S, villain), place(V, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:place "Home", :verb "live", :role "Mentor"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:place Home, :verb live, :role Mentor}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:place "Home", :verb "live", :role "Mentor"}} {:subtrope nil, :phase "D", :trigger {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:place Home, :verb live, :role Mentor}} {:subtrope nil, :phase D, :trigger {:object Weapon, :role-a Mentor, :role-b Hero, :verb give}})
(nil nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:place Home, :verb live, :role Mentor} {:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:place "Home", :verb "live", :role "Mentor"}} {:subtrope nil, :phase "D", :trigger {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:place Home, :verb live, :role Mentor}} {:subtrope nil, :phase D, :trigger {:object Weapon, :role-a Mentor, :role-b Hero, :verb give}})
(nil nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Home", :verb "live", :role "Mentor"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:object Weapon, :role-a Mentor, :role-b Hero, :verb give}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:object Weapon, :role-a Mentor, :role-b Hero, :verb give}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb kill, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb kill}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb kill}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb kill}]}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "kill"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "kill"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb kill, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb kill}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb kill}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb kill}]}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "kill"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "kill"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "kill"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb nil, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb nil}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb nil}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb nil}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb nil}]}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb nil})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb nil}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb nil}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb nil, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb nil}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb nil}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb nil}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb nil}]}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb nil})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb nil}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb nil}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}})
(nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:or [{:role Hero, :verb escape} {:role Hero, :verb die}]} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:or [{:verb escape, :role Hero} {:verb die, :role Hero}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:or [{:verb escape, :role Hero} {:verb die, :role Hero}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}} {:subtrope nil, :phase "D", :trigger {:or [{:verb "escape", :role "Hero"} {:verb "die", :role "Hero"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}} {:subtrope nil, :phase D, :trigger {:or [{:verb escape, :role Hero} {:verb die, :role Hero}]}})
(nil nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"} {:verb "escape", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:or [{:verb "escape", :role "Hero"} {:verb "die", :role "Hero"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:or [{:verb "escape", :role "Hero"} {:verb "die", :role "Hero"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:or [{:role Hero, :verb escape} {:role Hero, :verb die}]} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]} {:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:or [{:verb escape, :role Hero} {:verb die, :role Hero}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:or [{:verb escape, :role Hero} {:verb die, :role Hero}]} {:place Evil Lair, :verb go, :role Hero}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}} {:subtrope nil, :phase "D", :trigger {:or [{:verb "escape", :role "Hero"} {:verb "die", :role "Hero"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}} {:subtrope nil, :phase D, :trigger {:or [{:verb escape, :role Hero} {:verb die, :role Hero}]}})
(nil nil nil nil nil nil)

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"} {:verb "escape", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:or [{:verb "escape", :role "Hero"} {:verb "die", :role "Hero"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:or [{:verb "escape", :role "Hero"} {:verb "die", :role "Hero"}]} {:place "Evil Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair} {:subtrope Example 3}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}} {:subtrope {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}, :phase "D", :trigger {:place "Evil Lair", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}} {:subtrope {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}, :phase D, :trigger {:place Evil Lair, :verb go, :role Hero}})
(nil nil nil nil nil {:place "Home", :verb "go", :role "Hero"})

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"} {:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}

BRIDGE: []

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}]

SUBTROPE: {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}

[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}]
TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:role Hero, :verb arrive, :place Home} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair} {:subtrope Example 3}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:place "Home", :verb "arrive", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}} {:subtrope {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}, :phase "D", :trigger {:place "Evil Lair", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:place Home, :verb arrive, :role Hero}} {:subtrope nil, :phase C, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}} {:subtrope {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}, :phase D, :trigger {:place Evil Lair, :verb go, :role Hero}})
(nil nil nil nil nil {:place "Home", :verb "go", :role "Hero"})

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"} {:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}

BRIDGE: []

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Home", :verb "arrive", :role "Hero"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}]

SUBTROPE: {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}

[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:place Home, :verb arrive, :role Hero} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}]
TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair} {:subtrope Example 3}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}} {:subtrope {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}, :phase "C", :trigger {:place "Evil Lair", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}} {:subtrope {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}, :phase C, :trigger {:place Evil Lair, :verb go, :role Hero}})
(nil nil nil nil {:place "Home", :verb "go", :role "Hero"})

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"} {:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}

BRIDGE: []

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}]

SUBTROPE: {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}

[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}]
TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair} {:subtrope Example 3}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}} {:subtrope {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}, :phase "C", :trigger {:place "Evil Lair", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}} {:subtrope {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}, :phase C, :trigger {:place Evil Lair, :verb go, :role Hero}})
(nil nil nil nil {:place "Home", :verb "go", :role "Hero"})

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"} {:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}

BRIDGE: []

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 3"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}]

SUBTROPE: {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Land of Adventure is a place\nThe Sword is an object\nThe Hero goes Home\nThen the Hero finds a Sword\n  Or the Hero goes to the Land of Adventure\n  Or the Hero kills the Villain\nThen the Hero meets the Mentor\n  Or the Hero goes Home", :locations ["Home" "The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Example 3", :id "593a9aec53c7f0153e5157ae"}

[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 3}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Land of Adventure is a place
The Sword is an object
The Hero goes Home
Then the Hero finds a Sword
  Or the Hero goes to the Land of Adventure
  Or the Hero kills the Villain
Then the Hero meets the Mentor
  Or the Hero goes Home, :locations [Home The Land of Adventure], :objects [The Sword], :roles [The Hero The Villain The Mentor], :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :label Example 3, :id 593a9aec53c7f0153e5157ae}]
TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair} {:subtrope Example 1}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 1}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 1}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 1}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}} {:subtrope {:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}, :phase "C", :trigger {:place "Evil Lair", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}} {:subtrope {:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}, :phase C, :trigger {:place Evil Lair, :verb go, :role Hero}})
(nil nil nil nil {:verb "go_home", :role "Hero"})

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 1"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"} {:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 1"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}

BRIDGE: []

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 1"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}]

SUBTROPE: {:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}

[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 1}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}]
TMAP:
{:label New trope, :events [{:role Villain, :verb reside, :place Evil Lair} {:role Villain, :verb possess, :object Evil Plan} {:or [{:verb give, :role-b Hero, :role-a Mentor, :object Weapon} {:verb attack, :role-b Hero, :role-a Mentor}]} {:role Hero, :verb go, :place Evil Lair} {:subtrope Example 1}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 1}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4} {:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 1}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 1}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Evil Lair", :verb "reside", :role "Villain"})

("perm(reside(S, W)) if role(S, villain), place(W, evilLair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Evil Lair", :verb "reside", :role "Villain"}} {:subtrope nil, :phase "A", :trigger {:object "Evil Plan", :verb "possess", :role "Villain"}} {:subtrope nil, :phase "B", :trigger {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]}} {:subtrope {:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}, :phase "C", :trigger {:place "Evil Lair", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Evil Lair, :verb reside, :role Villain}} {:subtrope nil, :phase A, :trigger {:object Evil Plan, :verb possess, :role Villain}} {:subtrope nil, :phase B, :trigger {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]}} {:subtrope {:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}, :phase C, :trigger {:place Evil Lair, :verb go, :role Hero}})
(nil nil nil nil {:verb "go_home", :role "Hero"})

({:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 1"} {:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"} {:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 1"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}

BRIDGE: []

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events [{:place "Evil Lair", :verb "reside", :role "Villain"} {:object "Evil Plan", :verb "possess", :role "Villain"} {:or [{:object "Weapon", :role-a "Mentor", :role-b "Hero", :verb "give"} {:role-a "Mentor", :role-b "Hero", :verb "attack"}]} {:place "Evil Lair", :verb "go", :role "Hero"} {:subtrope "Example 1"}], :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}]

SUBTROPE: {:source "The Hero is a role\nThe Sword is an object\nThe Land of Adventure is a place\nThe Hero goes Home\nThen the Hero finds a Sword\nThen the Hero goes to the Land of Adventure", :locations ["The Land of Adventure"], :objects ["The Sword"], :roles ["The Hero"], :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :label "Example 1", :id "593a99a453c7f0153e5157a4"}

[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events [{:place Evil Lair, :verb reside, :role Villain} {:object Evil Plan, :verb possess, :role Villain} {:or [{:object Weapon, :role-a Mentor, :role-b Hero, :verb give} {:role-a Mentor, :role-b Hero, :verb attack}]} {:place Evil Lair, :verb go, :role Hero} {:subtrope Example 1}], :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Sword is an object
The Land of Adventure is a place
The Hero goes Home
Then the Hero finds a Sword
Then the Hero goes to the Land of Adventure, :locations [The Land of Adventure], :objects [The Sword], :roles [The Hero], :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :label Example 1, :id 593a99a453c7f0153e5157a4}]
TMAP:
{:label New trope, :events nil, :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events nil, :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593ab26a53c7f01fe50dda0d, :label New trope, :events nil, :subverted false, :places [{:id The Home, :label The Home, :location The Home} {:id The Evil Lair, :label The Evil Lair, :location The Evil Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
(nil)

("perm(()) if ")

SUBS2:
()

Filter:
()
()

()

OS:
()
()
hey
[{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events nil, :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593ab26a53c7f01fe50dda0d", :label "New trope", :events nil, :subverted false, :places [{:id "The Home", :label "The Home", :location "The Home"} {:id "The Evil Lair", :label "The Evil Lair", :location "The Evil Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label New trope, :events nil, :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Revenge Trope, :events [{:verb kill, :role-b Friend, :role-a Villain} {:role Hero, :verb nil} {:verb kill, :role-b Villain, :role-a Hero}], :roles (The Villain The Hero The Friend), :objects (), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]}]
HMAP:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]}]
FIRT EVESTNE:
({:role-a "Villain", :role-b "Friend", :verb "kill"})

("perm(kill(S, T)) if role(S, villain), role(T, friend)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Friend", :verb "kill"}} {:subtrope nil, :phase "A", :trigger {:verb nil, :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Friend, :verb kill}} {:subtrope nil, :phase A, :trigger {:verb nil, :role Hero}})
(nil nil nil)

({:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"})

OS:
()
()
hey
[{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]}]

{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]}

BRIDGE: []

TMAP:
{:label Revenge Trope, :events [{:verb kill, :role-b Friend, :role-a Villain} {:role Hero, :verb nil} {:verb kill, :role-b Villain, :role-a Hero}], :roles (The Villain The Hero The Friend), :objects (), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]}]
HMAP:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]}]
FIRT EVESTNE:
({:role-a "Villain", :role-b "Friend", :verb "kill"})

("perm(kill(S, T)) if role(S, villain), role(T, friend)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Friend", :verb "kill"}} {:subtrope nil, :phase "A", :trigger {:verb nil, :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Friend, :verb kill}} {:subtrope nil, :phase A, :trigger {:verb nil, :role Hero}})
(nil nil nil)

({:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"})

OS:
()
()
hey
[{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]}]

{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]}

BRIDGE: []

TMAP:
{:label Revenge Trope, :events [{:verb kill, :role-b Friend, :role-a Villain} {:role Hero, :verb anger} {:verb kill, :role-b Villain, :role-a Hero}], :roles (The Villain The Hero The Friend), :objects (), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb anger, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]}]
HMAP:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb anger, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]}]
FIRT EVESTNE:
({:role-a "Villain", :role-b "Friend", :verb "kill"})

("perm(kill(S, T)) if role(S, villain), role(T, friend)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Friend", :verb "kill"}} {:subtrope nil, :phase "A", :trigger {:verb "anger", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Friend, :verb kill}} {:subtrope nil, :phase A, :trigger {:verb anger, :role Hero}})
(nil nil nil)

({:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb "anger", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"})

OS:
()
()
hey
[{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb "anger", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]}]

{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb "anger", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]}

BRIDGE: []

TMAP:
{:label Revenge Trope, :events [{:verb kill, :role-b Friend, :role-a Villain} {:role Hero, :verb anger} {:verb kill, :role-b Villain, :role-a Hero}], :roles (The Villain The Hero The Friend), :objects (), :locations ()}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Betrayal Trope, :events [{:verb trust, :role-b Mentor, :role-a Hero} {:verb betray, :role-b Hero, :role-a Mentor}], :roles (The Mentor The Hero), :objects (), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab74653c7f01fe50dda44, :label Betrayal Trope, :events [{:role-a Hero, :role-b Mentor, :verb trust} {:role-a Mentor, :role-b Hero, :verb betray}], :subverted false, :places [], :objects [], :characters [{:id The Mentor, :label The Mentor, :role The Mentor} {:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593ab74653c7f01fe50dda44, :label Betrayal Trope, :events [{:role-a Hero, :role-b Mentor, :verb trust} {:role-a Mentor, :role-b Hero, :verb betray}], :subverted false, :places [], :objects [], :characters [{:id The Mentor, :label The Mentor, :role The Mentor} {:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:role-a "Hero", :role-b "Mentor", :verb "trust"})

("perm(trust(R, S)) if role(R, hero), role(S, mentor)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Hero", :role-b "Mentor", :verb "trust"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Hero, :role-b Mentor, :verb trust}})
(nil nil)

({:role-a "Hero", :role-b "Mentor", :verb "trust"} {:role-a "Mentor", :role-b "Hero", :verb "betray"})

OS:
()
()
hey
[{:id "593ab74653c7f01fe50dda44", :label "Betrayal Trope", :events [{:role-a "Hero", :role-b "Mentor", :verb "trust"} {:role-a "Mentor", :role-b "Hero", :verb "betray"}], :subverted false, :places [], :objects [], :characters [{:id "The Mentor", :label "The Mentor", :role "The Mentor"} {:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593ab74653c7f01fe50dda44", :label "Betrayal Trope", :events [{:role-a "Hero", :role-b "Mentor", :verb "trust"} {:role-a "Mentor", :role-b "Hero", :verb "betray"}], :subverted false, :places [], :objects [], :characters [{:id "The Mentor", :label "The Mentor", :role "The Mentor"} {:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Betrayal Trope, :events [{:verb trust, :role-b Mentor, :role-a Hero} {:verb betray, :role-b Hero, :role-a Mentor}], :roles (The Mentor The Hero), :objects (), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb anger, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]}]
HMAP:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb anger, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]}]
FIRT EVESTNE:
({:role-a "Villain", :role-b "Friend", :verb "kill"})

("perm(kill(S, T)) if role(S, villain), role(T, friend)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Friend", :verb "kill"}} {:subtrope nil, :phase "A", :trigger {:verb "anger", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Friend, :verb kill}} {:subtrope nil, :phase A, :trigger {:verb anger, :role Hero}})
(nil nil nil)

({:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb "anger", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"})

OS:
()
()
hey
[{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb "anger", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]}]

{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb "anger", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb anger, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]} {:id 593ab74653c7f01fe50dda44, :label Betrayal Trope, :events [{:role-a Hero, :role-b Mentor, :verb trust} {:role-a Mentor, :role-b Hero, :verb betray}], :subverted false, :places [], :objects [], :characters [{:id The Mentor, :label The Mentor, :role The Mentor} {:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb anger, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]}]
FIRT EVESTNE:
({:role-a "Villain", :role-b "Friend", :verb "kill"})

("perm(kill(S, T)) if role(S, villain), role(T, friend)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Villain", :role-b "Friend", :verb "kill"}} {:subtrope nil, :phase "A", :trigger {:verb "anger", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Villain, :role-b Friend, :verb kill}} {:subtrope nil, :phase A, :trigger {:verb anger, :role Hero}})
(nil nil nil)

({:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb "anger", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"})

OS:
()
()
TROPES:
[{:id 593ab6f153c7f01fe50dda3f, :label Revenge Trope, :events [{:role-a Villain, :role-b Friend, :verb kill} {:verb anger, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}], :subverted false, :places [], :objects [], :characters [{:id The Villain, :label The Villain, :role The Villain} {:id The Hero, :label The Hero, :role The Hero} {:id The Friend, :label The Friend, :role The Friend}]} {:id 593ab74653c7f01fe50dda44, :label Betrayal Trope, :events [{:role-a Hero, :role-b Mentor, :verb trust} {:role-a Mentor, :role-b Hero, :verb betray}], :subverted false, :places [], :objects [], :characters [{:id The Mentor, :label The Mentor, :role The Mentor} {:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593ab74653c7f01fe50dda44, :label Betrayal Trope, :events [{:role-a Hero, :role-b Mentor, :verb trust} {:role-a Mentor, :role-b Hero, :verb betray}], :subverted false, :places [], :objects [], :characters [{:id The Mentor, :label The Mentor, :role The Mentor} {:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:role-a "Hero", :role-b "Mentor", :verb "trust"})

("perm(trust(R, S)) if role(R, hero), role(S, mentor)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:role-a "Hero", :role-b "Mentor", :verb "trust"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:role-a Hero, :role-b Mentor, :verb trust}})
(nil nil)

({:role-a "Hero", :role-b "Mentor", :verb "trust"} {:role-a "Mentor", :role-b "Hero", :verb "betray"})

OS:
()
()
hey
[{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb "anger", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]} {:id "593ab74653c7f01fe50dda44", :label "Betrayal Trope", :events [{:role-a "Hero", :role-b "Mentor", :verb "trust"} {:role-a "Mentor", :role-b "Hero", :verb "betray"}], :subverted false, :places [], :objects [], :characters [{:id "The Mentor", :label "The Mentor", :role "The Mentor"} {:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593ab6f153c7f01fe50dda3f", :label "Revenge Trope", :events [{:role-a "Villain", :role-b "Friend", :verb "kill"} {:verb "anger", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}], :subverted false, :places [], :objects [], :characters [{:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Friend", :label "The Friend", :role "The Friend"}]}

BRIDGE: []

{:id "593ab74653c7f01fe50dda44", :label "Betrayal Trope", :events [{:role-a "Hero", :role-b "Mentor", :verb "trust"} {:role-a "Mentor", :role-b "Hero", :verb "betray"}], :subverted false, :places [], :objects [], :characters [{:id "The Mentor", :label "The Mentor", :role "The Mentor"} {:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

2017-06-11 08:32:49.504:WARN:oejh.HttpParser:qtp560332026-18: Illegal character 0x16 in state=START for buffer HeapByteBuffer@311ac135[p=1,l=295,c=8192,r=294]={\x16<<<\x03\x01\x01"\x01\x00\x01\x1e\x03\x03\xB8\x96}\x94\xA9\xD0\xC4...\x03\x02\x03\x03\x02\x01\x02\x02\x02\x03\x00\x0f\x00\x01\x01>>>Content-Range,If-...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
2017-06-11 08:32:49.504:WARN:oejh.HttpParser:qtp560332026-18: badMessage: 400 Illegal character 0x16 for HttpChannelOverHttp@584f5f10{r=0,c=false,a=IDLE,uri=-}
2017-06-11 20:00:01.553:WARN:oejh.HttpParser:qtp560332026-76: badMessage: 400 No Host for HttpChannelOverHttp@3290326f{r=0,c=false,a=IDLE,uri=-}
NEW STORY
Architecture: instal-linux
hey
[]

TMAP:
{:label Revenge Trope, :events [{:verb kill, :role-b Friend, :role-a Villain} {:role Hero, :verb anger} {:verb kill, :role-b Villain, :role-a Hero}], :roles (The Villain The Hero The Friend), :objects (), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9aec53c7f0153e5157ae, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a9aec53c7f0153e5157ae, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a9aec53c7f0153e5157ae", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a9aec53c7f0153e5157ae", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a9a0453c7f0153e5157a7, :label Example 2, :events [{:or [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a9a0453c7f0153e5157a7", :label "Example 2", :events [{:or [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label nil, :events nil, :roles nil, :objects nil, :locations nil}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Betrayal Trope, :events [{:verb trust, :role-b Mentor, :role-a Hero} {:verb betray, :role-b Hero, :role-a Mentor}], :roles (The Mentor The Hero), :objects (), :locations ()}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label New trope, :events nil, :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Example 4, :events [{:role Villain, :verb nil, :place Evil Lair} {:role Hero, :verb arrive, :place Home} {:role Mentor, :verb live, :place Home} {:role Hero, :verb go, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (The Home The Evil Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Example 1}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Item Search, :events [{:role Hero, :verb chase, :object Macguffin} {:or [{:role Hero, :verb find, :object Macguffin} {:role Hero, :verb go, :place Home}]}], :roles (The Hero), :objects (The Macguffin), :locations (Home)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Example 3, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (Home The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 1, :events [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero), :objects (The Sword), :locations (The Land of Adventure)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Example 3, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (The Land of Adventure Home)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6edc53c7f01fe50dda5a, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e6edc53c7f01fe50dda5a, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e6edc53c7f01fe50dda5a", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e6edc53c7f01fe50dda5a", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Example 3, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (The Land of Adventure Home)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Item Search, :events [{:role Hero, :verb chase, :object Macguffin} {:or [{:role Hero, :verb find, :object Macguffin} {:role Hero, :verb go, :place Home}]}], :roles (The Hero), :objects (The Macguffin), :locations (Home)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6f1553c7f01fe50dda5d, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e6f1553c7f01fe50dda5d, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e6f1553c7f01fe50dda5d", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593e6f1553c7f01fe50dda5d", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb chase, :object Macguffin} {:or [{:role Hero, :verb find, :object Macguffin} {:role Hero, :verb go, :place Home}]}], :roles (The Hero), :objects (The Macguffin), :locations (Home)}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Item Search}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d} {:id 593e6f4153c7f01fe50dda60, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d} {:id 593e6f4153c7f01fe50dda60, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593e6f4153c7f01fe50dda60, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
FIRT EVESTNE:
({:place "Away", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, away)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:object "Macguffin", :verb "chase", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"})

OS:
()
()
hey
[{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"} {:id "593e6f4153c7f01fe50dda60", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"}

BRIDGE: []

{:id "593e6f4153c7f01fe50dda60", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"}]

SUBTROPE: {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"}

[{:id 593e6f4153c7f01fe50dda60, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d}]
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Item Search}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"})

("perm(go_home(R)) if role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:verb "go_home", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:verb go_home, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 1, :events [{:role Hero, :verb go, :place Home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero), :objects (The Sword), :locations (The Land of Adventure Home)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go_home(R)) if role(R, hero)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6edc53c7f01fe50dda5a, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e6edc53c7f01fe50dda5a, :label Example 3, :events [{:place Home, :verb go, :role Hero} {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]} {:or [{:role-a Hero, :role-b Mentor, :verb meet} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill}]}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e6edc53c7f01fe50dda5a", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e6edc53c7f01fe50dda5a", :label "Example 3", :events [{:place "Home", :verb "go", :role "Hero"} {:or [{:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"}]} {:or [{:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Example 3, :events [{:role Hero, :verb go, :place Home} {:or [{:role Hero, :verb find, :object Sword} {:role Hero, :verb go, :place Land of Adventure} {:verb kill, :role-b Villain, :role-a Hero}]} {:or [{:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Sword), :locations (The Land of Adventure Home)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6f1553c7f01fe50dda5d, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e6f1553c7f01fe50dda5d, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e6f1553c7f01fe50dda5d", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593e6f1553c7f01fe50dda5d", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Item Search, :events [{:role Hero, :verb chase, :object Macguffin} {:or [{:role Hero, :verb find, :object Macguffin} {:role Hero, :verb go, :place Home}]}], :roles (The Hero), :objects (The Macguffin), :locations (Home)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d} {:id 593e6f4153c7f01fe50dda60, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d} {:id 593e6f4153c7f01fe50dda60, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
HMAP:
[{:id 593e6f4153c7f01fe50dda60, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]}]
FIRT EVESTNE:
({:place "Away", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, away)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Away", :verb "go", :role "Hero"}} {:subtrope {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"}, :phase "A", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Away, :verb go, :role Hero}} {:subtrope {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d}, :phase A, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil {:object "Macguffin", :verb "chase", :role "Hero"})

({:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"})

OS:
()
()
hey
[{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"} {:id "593e6f4153c7f01fe50dda60", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}]

{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"}

BRIDGE: []

{:id "593e6f4153c7f01fe50dda60", :label "Kill then Search", :events [{:place "Away", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:subtrope "Item Search"}], :subverted false, :places [{:id "Away", :label "Away", :location "Away"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"}]}

BRIDGE: [{:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"}]

SUBTROPE: {:source "The Macguffin is an object\nThe Hero is a role\nHome is a place\nThe Hero chases the Macguffin\nThen the Hero finds the Macguffin\n  Or the Hero goes Home", :locations ["Home"], :objects ["The Macguffin"], :roles ["The Hero"], :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Item Search", :id "593e6f1553c7f01fe50dda5d"}

[{:id 593e6f4153c7f01fe50dda60, :label Kill then Search, :events [{:place Away, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:subtrope Item Search}], :subverted false, :places [{:id Away, :label Away, :location Away}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain}]} {:source The Macguffin is an object
The Hero is a role
Home is a place
The Hero chases the Macguffin
Then the Hero finds the Macguffin
  Or the Hero goes Home, :locations [Home], :objects [The Macguffin], :roles [The Hero], :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Item Search, :id 593e6f1553c7f01fe50dda5d}]
TMAP:
{:label Kill then Search, :events [{:role Hero, :verb go, :place Away} {:verb kill, :role-b Villain, :role-a Hero} {:subtrope Item Search}], :roles (The Hero The Villain), :objects (), :locations (Away)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go_home(R)) if role(R, hero)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb find, :object Shield} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword The Shield), :locations ()}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go_home(R)) if role(R, hero)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(find(R, T)) if role(R, hero), object(T, shield)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"} {:id "The Shield", :label "The Shield", :type "The Shield"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"} {:id "The Shield", :label "The Shield", :type "The Shield"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go_home(R)) if role(R, hero)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(find(R, T)) if role(R, hero), object(T, shield)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb find, :object Shield} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword The Shield), :locations ()}
OS:
()
()
hey
[{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"} {:id "The Shield", :label "The Shield", :type "The Shield"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"} {:id "The Shield", :label "The Shield", :type "The Shield"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

TMAP:
{:label Example 2, :events [{:or [{:role Hero, :verb go_home} {:role Hero, :verb find, :object Sword} {:role Hero, :verb find, :object Shield} {:role Hero, :verb die}]}], :roles (The Hero), :objects (The Sword The Shield), :locations ()}
NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, S)) if role(R, hero), place(S, home)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, S)) if role(R, hero), place(S, home)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, S)) if role(R, hero), place(S, home)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}})
(nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}})
(nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}})
(nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}})
(nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Evil Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Evil Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Evil Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Evil Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Evil Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Evil Lair, :label Evil Lair, :location Evil Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Evil Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Evil Lair", :label "Evil Lair", :location "Evil Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb nil, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Lair", :verb nil, :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Lair, :verb nil, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb nil, :place Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home Lair Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb nil, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id Lair, :label Lair, :location Lair} {:id Land of Adventure, :label Land of Adventure, :location Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb nil, :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "Lair", :label "Lair", :location "Lair"} {:id "Land of Adventure", :label "Land of Adventure", :location "Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Lair}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Home} {:verb meet, :role-b Mentor, :role-a Hero} {:role Hero, :verb go, :place Lair} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Home, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:place Lair, :verb go, :role Hero} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Home", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:place "Lair", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:role Hero, :verb nil} {:role Villain, :verb nil, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:verb nil, :role Hero} {:object Evil Plan, :verb nil, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:verb nil, :role Hero} {:object Evil Plan, :verb nil, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb nil, :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb nil, :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb nil, :role Hero}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb nil, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb nil, :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb nil, :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb nil, :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:role Hero, :verb nil} {:role Villain, :verb nil, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:verb nil, :role Hero} {:object Evil Plan, :verb nil, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:verb nil, :role Hero} {:object Evil Plan, :verb nil, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb nil, :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb nil, :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb nil, :role Hero}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb nil, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb nil, :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb nil, :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb nil, :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:role Hero, :verb nil} {:role Villain, :verb make, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:verb nil, :role Hero} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:verb nil, :role Hero} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb nil, :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb nil, :role Hero}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:role Hero, :verb nil} {:role Villain, :verb make, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:verb nil, :role Hero} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:verb nil, :role Hero} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:verb nil, :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:verb nil, :role Hero}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:verb nil, :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:role Hero, :verb find, :object Weapon} {:role Villain, :verb make, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:object Weapon, :verb find, :role Hero} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:object Weapon, :verb find, :role Hero} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Weapon", :verb "find", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Weapon, :verb find, :role Hero}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:role Hero, :verb find, :object Weapon} {:role Villain, :verb make, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:object Weapon, :verb find, :role Hero} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:object Weapon, :verb find, :role Hero} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Weapon", :verb "find", :role "Hero"}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Weapon, :verb find, :role Hero}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:or [{:role Hero, :verb find, :object Weapon} {:role Villain, :verb find, :object Weapon}]} {:role Villain, :verb make, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:or [{:role Hero, :verb find, :object Weapon} {:role Villain, :verb find, :object Weapon}]} {:role Villain, :verb make, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:role Hero, :verb go, :place Land of Adventure}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:or [{:role Hero, :verb find, :object Weapon} {:role Villain, :verb find, :object Weapon}]} {:role Villain, :verb make, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:or [{:role Hero, :verb go, :place Land of Adventure} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:or [{:role Hero, :verb find, :object Weapon} {:role Villain, :verb find, :object Weapon}]} {:role Villain, :verb make, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:or [{:role Hero, :verb go, :place Land of Adventure} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

TMAP:
{:label Task 2, :events [{:role Hero, :verb go, :place Lair} {:or [{:role Hero, :verb find, :object Weapon} {:role Villain, :verb find, :object Weapon}]} {:role Villain, :verb make, :object Evil Plan} {:verb kill, :role-b Villain, :role-a Hero} {:or [{:role Hero, :verb go, :place Land of Adventure} {:role Hero, :verb go, :place Home}]}], :roles (The Hero The Villain The Mentor), :objects (The Weapon The Evil Plan), :locations (Home The Lair The Land of Adventure)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go_home(R)) if role(R, hero)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(find(R, T)) if role(R, hero), object(T, shield)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]} {:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"} {:id "The Shield", :label "The Shield", :type "The Shield"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"} {:id "The Shield", :label "The Shield", :type "The Shield"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]} {:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
java.lang.NullPointerException: null
              string.clj:101 clojure.string/replace
               string.clj:75 clojure.string/replace
               instal.clj:33 tropic.instal/event-name
               solver.clj:55 tropic.solver/make-instal[fn]
               core.clj:2644 clojure.core/map[fn]
             LazySeq.java:40 clojure.lang.LazySeq.sval
             LazySeq.java:49 clojure.lang.LazySeq.seq
                 RT.java:521 clojure.lang.RT.seq
                core.clj:137 clojure.core/seq
               core.clj:3024 clojure.core/dorun
               core.clj:3024 clojure.core/dorun
               solver.clj:55 tropic.solver/make-instal
              solver.clj:121 tropic.solver/make-story
           datastore.clj:107 story-server.datastore/new-story
           datastore.clj:100 story-server.datastore/new-story
              handler.clj:17 story-server.handler/fn
              handler.clj:17 story-server.handler/fn
                core.clj:135 compojure.core/make-route[fn]
                core.clj:122 compojure.core/wrap-route-middleware[fn]
                core.clj:126 compojure.core/wrap-route-info[fn]
                 core.clj:45 compojure.core/if-route[fn]
                 core.clj:27 compojure.core/if-method[fn]
                core.clj:151 compojure.core/routing[fn]
               core.clj:2592 clojure.core/some
               core.clj:2583 clojure.core/some
                core.clj:151 compojure.core/routing
                core.clj:148 compojure.core/routing
             RestFn.java:139 clojure.lang.RestFn.applyTo
                core.clj:648 clojure.core/apply
                core.clj:641 clojure.core/apply
                core.clj:156 compojure.core/routes[fn]
              handler.clj:57 story-server.handler/all-cors[fn]
       keyword_params.clj:35 ring.middleware.keyword-params/wrap-keyword-params[fn]
                 json.clj:72 ring.middleware.json/wrap-json-params[fn]
                 json.clj:87 ring.middleware.json/wrap-json-response[fn]
                Var.java:379 clojure.lang.Var.invoke
               reload.clj:22 ring.middleware.reload/wrap-reload[fn]
           stacktrace.clj:23 ring.middleware.stacktrace/wrap-stacktrace-log[fn]
           stacktrace.clj:86 ring.middleware.stacktrace/wrap-stacktrace-web[fn]
                jetty.clj:24 ring.adapter.jetty/proxy-handler[fn]
            (Unknown Source) ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle
      HandlerWrapper.java:97 org.eclipse.jetty.server.handler.HandlerWrapper.handle
             Server.java:497 org.eclipse.jetty.server.Server.handle
        HttpChannel.java:310 org.eclipse.jetty.server.HttpChannel.handle
     HttpConnection.java:257 org.eclipse.jetty.server.HttpConnection.onFillable
 AbstractConnection.java:540 org.eclipse.jetty.io.AbstractConnection$2.run
   QueuedThreadPool.java:635 org.eclipse.jetty.util.thread.QueuedThreadPool.runJob
   QueuedThreadPool.java:555 org.eclipse.jetty.util.thread.QueuedThreadPool$3.run
             Thread.java:748 java.lang.Thread.run
TMAP:
{:label Use Sub Trope, :events [{:role Hero, :verb go, :place Training Place} {:verb meet, :role-b Mentor, :role-a Hero} {:role Mentor, :verb equip, :object Fighting Stick} {:verb train, :role-b Hero, :role-a Mentor} {:subtrope Task 2}], :roles (The Hero The Mentor), :objects (The Fighting Stick), :locations (The Training Place)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b} {:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:place Training Place, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:object Fighting Stick, :verb equip, :role Mentor} {:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b} {:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:place Training Place, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:object Fighting Stick, :verb equip, :role Mentor} {:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:place Training Place, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:object Fighting Stick, :verb equip, :role Mentor} {:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Training Place", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, trainingPlace)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Training Place", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:object "Fighting Stick", :verb "equip", :role "Mentor"}} {:subtrope {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}, :phase "C", :trigger {:role-a "Mentor", :role-b "Hero", :verb "train"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Training Place, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:object Fighting Stick, :verb equip, :role Mentor}} {:subtrope {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}, :phase C, :trigger {:role-a Mentor, :role-b Hero, :verb train}})
(nil nil nil nil {:place "Lair", :verb "go", :role "Hero"})

({:place "Training Place", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:object "Fighting Stick", :verb "equip", :role "Mentor"} {:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"} {:id "593e7ef253c7f01fe50dda9c", :label "Use Sub Trope", :events [{:place "Training Place", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:object "Fighting Stick", :verb "equip", :role "Mentor"} {:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"}], :subverted false, :places [{:id "The Training Place", :label "The Training Place", :location "The Training Place"}], :objects [{:id "The Fighting Stick", :label "The Fighting Stick", :type "The Fighting Stick"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}

BRIDGE: []

{:id "593e7ef253c7f01fe50dda9c", :label "Use Sub Trope", :events [{:place "Training Place", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:object "Fighting Stick", :verb "equip", :role "Mentor"} {:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"}], :subverted false, :places [{:id "The Training Place", :label "The Training Place", :location "The Training Place"}], :objects [{:id "The Fighting Stick", :label "The Fighting Stick", :type "The Fighting Stick"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}]

SUBTROPE: {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}

[{:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:place Training Place, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:object Fighting Stick, :verb equip, :role Mentor} {:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}]
TMAP:
{:label Use Sub Trope, :events [{:role Hero, :verb go, :place Training Place} {:verb meet, :role-b Mentor, :role-a Hero} {:role Mentor, :verb equip, :object Fighting Stick} {:verb train, :role-b Hero, :role-a Mentor} {:subtrope Task 2}], :roles (The Hero The Mentor), :objects (The Fighting Stick), :locations (The Training Place)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b} {:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:place Training Place, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:object Fighting Stick, :verb equip, :role Mentor} {:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b} {:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:place Training Place, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:object Fighting Stick, :verb equip, :role Mentor} {:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:place Training Place, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:object Fighting Stick, :verb equip, :role Mentor} {:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Training Place", :verb "go", :role "Hero"})

("perm(go(R, U)) if role(R, hero), place(U, trainingPlace)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Training Place", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:role-a "Hero", :role-b "Mentor", :verb "meet"}} {:subtrope nil, :phase "B", :trigger {:object "Fighting Stick", :verb "equip", :role "Mentor"}} {:subtrope {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}, :phase "C", :trigger {:role-a "Mentor", :role-b "Hero", :verb "train"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Training Place, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:role-a Hero, :role-b Mentor, :verb meet}} {:subtrope nil, :phase B, :trigger {:object Fighting Stick, :verb equip, :role Mentor}} {:subtrope {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}, :phase C, :trigger {:role-a Mentor, :role-b Hero, :verb train}})
(nil nil nil nil {:place "Lair", :verb "go", :role "Hero"})

({:place "Training Place", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:object "Fighting Stick", :verb "equip", :role "Mentor"} {:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"} {:id "593e7ef253c7f01fe50dda9c", :label "Use Sub Trope", :events [{:place "Training Place", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:object "Fighting Stick", :verb "equip", :role "Mentor"} {:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"}], :subverted false, :places [{:id "The Training Place", :label "The Training Place", :location "The Training Place"}], :objects [{:id "The Fighting Stick", :label "The Fighting Stick", :type "The Fighting Stick"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}

BRIDGE: []

{:id "593e7ef253c7f01fe50dda9c", :label "Use Sub Trope", :events [{:place "Training Place", :verb "go", :role "Hero"} {:role-a "Hero", :role-b "Mentor", :verb "meet"} {:object "Fighting Stick", :verb "equip", :role "Mentor"} {:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"}], :subverted false, :places [{:id "The Training Place", :label "The Training Place", :location "The Training Place"}], :objects [{:id "The Fighting Stick", :label "The Fighting Stick", :type "The Fighting Stick"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}]

SUBTROPE: {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}

[{:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:place Training Place, :verb go, :role Hero} {:role-a Hero, :role-b Mentor, :verb meet} {:object Fighting Stick, :verb equip, :role Mentor} {:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}]
TMAP:
{:label Use Sub Trope, :events [{:verb train, :role-b Hero, :role-a Mentor} {:subtrope Task 2}], :roles (The Hero The Mentor), :objects (The Fighting Stick), :locations (The Training Place)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b} {:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b} {:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:role-a "Mentor", :role-b "Hero", :verb "train"})

("perm(train(R, S)) if role(S, mentor), role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}, :phase "active", :trigger {:role-a "Mentor", :role-b "Hero", :verb "train"}})

Filter:
({:subtrope nil} {:subtrope {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}, :phase active, :trigger {:role-a Mentor, :role-b Hero, :verb train}})
(nil {:place "Lair", :verb "go", :role "Hero"})

({:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"} {:id "593e7ef253c7f01fe50dda9c", :label "Use Sub Trope", :events [{:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"}], :subverted false, :places [{:id "The Training Place", :label "The Training Place", :location "The Training Place"}], :objects [{:id "The Fighting Stick", :label "The Fighting Stick", :type "The Fighting Stick"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}

BRIDGE: []

{:id "593e7ef253c7f01fe50dda9c", :label "Use Sub Trope", :events [{:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"}], :subverted false, :places [{:id "The Training Place", :label "The Training Place", :location "The Training Place"}], :objects [{:id "The Fighting Stick", :label "The Fighting Stick", :type "The Fighting Stick"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}]

SUBTROPE: {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}

[{:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}]
TMAP:
{:label Use Sub Trope, :events [{:verb train, :role-b Hero, :role-a Mentor} {:subtrope Task 2}], :roles (The Hero The Mentor), :objects (The Fighting Stick), :locations (The Training Place)}
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b} {:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b} {:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b} {:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:role-a "Mentor", :role-b "Hero", :verb "train"})

("perm(train(R, S)) if role(S, mentor), role(R, hero)")

SUBS2:
({:subtrope nil} {:subtrope {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}, :phase "active", :trigger {:role-a "Mentor", :role-b "Hero", :verb "train"}})

Filter:
({:subtrope nil} {:subtrope {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}, :phase active, :trigger {:role-a Mentor, :role-b Hero, :verb train}})
(nil {:place "Lair", :verb "go", :role "Hero"})

({:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"})

OS:
()
()
hey
[{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"} {:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]} {:id "593e7ef253c7f01fe50dda9c", :label "Use Sub Trope", :events [{:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"}], :subverted false, :places [{:id "The Training Place", :label "The Training Place", :location "The Training Place"}], :objects [{:id "The Fighting Stick", :label "The Fighting Stick", :type "The Fighting Stick"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}

BRIDGE: []

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

{:id "593e7ef253c7f01fe50dda9c", :label "Use Sub Trope", :events [{:role-a "Mentor", :role-b "Hero", :verb "train"} {:subtrope "Task 2"}], :subverted false, :places [{:id "The Training Place", :label "The Training Place", :location "The Training Place"}], :objects [{:id "The Fighting Stick", :label "The Fighting Stick", :type "The Fighting Stick"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: [{:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}]

SUBTROPE: {:source "The Hero is a role\nThe Villain is a role\nThe Mentor is a role\nHome is a place\nThe Lair is a place\nThe Land of Adventure is a place\nThe Weapon is an object\nThe Evil Plan is an object\nThe Hero goes to the Lair\nThen the Hero finds the Weapon\n  Or the Villain finds the Weapon\nThen the Villain makes the Evil Plan\nThen the Hero kills the Villain\nThen the Hero goes to the Land of Adventure\n  Or the Hero goes Home", :locations ["Home" "The Lair" "The Land of Adventure"], :objects ["The Weapon" "The Evil Plan"], :roles ["The Hero" "The Villain" "The Mentor"], :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :label "Task 2", :id "593e79d853c7f01fe50dda6b"}

[{:id 593e7ef253c7f01fe50dda9c, :label Use Sub Trope, :events [{:role-a Mentor, :role-b Hero, :verb train} {:subtrope Task 2}], :subverted false, :places [{:id The Training Place, :label The Training Place, :location The Training Place}], :objects [{:id The Fighting Stick, :label The Fighting Stick, :type The Fighting Stick}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:source The Hero is a role
The Villain is a role
The Mentor is a role
Home is a place
The Lair is a place
The Land of Adventure is a place
The Weapon is an object
The Evil Plan is an object
The Hero goes to the Lair
Then the Hero finds the Weapon
  Or the Villain finds the Weapon
Then the Villain makes the Evil Plan
Then the Hero kills the Villain
Then the Hero goes to the Land of Adventure
  Or the Hero goes Home, :locations [Home The Lair The Land of Adventure], :objects [The Weapon The Evil Plan], :roles [The Hero The Villain The Mentor], :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :label Task 2, :id 593e79d853c7f01fe50dda6b}]
NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]} {:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]}]
FIRT EVESTNE:
({:place "Lair", :verb "go", :role "Hero"})

("perm(go(R, V)) if role(R, hero), place(V, lair)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Lair", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]}} {:subtrope nil, :phase "B", :trigger {:object "Evil Plan", :verb "make", :role "Villain"}} {:subtrope nil, :phase "C", :trigger {:role-a "Hero", :role-b "Villain", :verb "kill"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Lair, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]}} {:subtrope nil, :phase B, :trigger {:object Evil Plan, :verb make, :role Villain}} {:subtrope nil, :phase C, :trigger {:role-a Hero, :role-b Villain, :verb kill}})
(nil nil nil nil nil)

({:place "Lair", :verb "go", :role "Hero"} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"} {:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:id 593e79d853c7f01fe50dda6b, :label Task 2, :events [{:place Lair, :verb go, :role Hero} {:or [{:object Weapon, :verb find, :role Hero} {:object Weapon, :verb find, :role Villain}]} {:object Evil Plan, :verb make, :role Villain} {:role-a Hero, :role-b Villain, :verb kill} {:or [{:place Land of Adventure, :verb go, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home} {:id The Lair, :label The Lair, :location The Lair} {:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure}], :objects [{:id The Weapon, :label The Weapon, :type The Weapon} {:id The Evil Plan, :label The Evil Plan, :type The Evil Plan}], :characters [{:id The Hero, :label The Hero, :role The Hero} {:id The Villain, :label The Villain, :role The Villain} {:id The Mentor, :label The Mentor, :role The Mentor}]} {:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]} {:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593e79d853c7f01fe50dda6b", :label "Task 2", :events [{:place "Lair", :verb "go", :role "Hero"} {:or [{:object "Weapon", :verb "find", :role "Hero"} {:object "Weapon", :verb "find", :role "Villain"}]} {:object "Evil Plan", :verb "make", :role "Villain"} {:role-a "Hero", :role-b "Villain", :verb "kill"} {:or [{:place "Land of Adventure", :verb "go", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"} {:id "The Lair", :label "The Lair", :location "The Lair"} {:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"}], :objects [{:id "The Weapon", :label "The Weapon", :type "The Weapon"} {:id "The Evil Plan", :label "The Evil Plan", :type "The Evil Plan"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"} {:id "The Villain", :label "The Villain", :role "The Villain"} {:id "The Mentor", :label "The Mentor", :role "The Mentor"}]}

BRIDGE: []

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

("perm(go_home(R)) if role(R, hero)" "perm(find(R, S)) if role(R, hero), object(S, sword)" "perm(find(R, T)) if role(R, hero), object(T, shield)" "perm(die(R)) if role(R, hero)")

SUBS2:
({:subtrope nil})

Filter:
({:subtrope nil})
(nil)

({:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"})

OS:
()
()
TROPES:
[{:id 593e6e9e53c7f01fe50dda57, :label Example 2, :events [{:or [{:verb go_home, :role Hero} {:object Sword, :verb find, :role Hero} {:object Shield, :verb find, :role Hero} {:verb die, :role Hero}]}], :subverted false, :places [], :objects [{:id The Sword, :label The Sword, :type The Sword} {:id The Shield, :label The Shield, :type The Shield}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"} {:id "The Shield", :label "The Shield", :type "The Shield"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]} {:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593e6e9e53c7f01fe50dda57", :label "Example 2", :events [{:or [{:verb "go_home", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:object "Shield", :verb "find", :role "Hero"} {:verb "die", :role "Hero"}]}], :subverted false, :places [], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"} {:id "The Shield", :label "The Shield", :type "The Shield"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

NEW STORY
Architecture: instal-linux
TROPES:
[{:id 593e6f1553c7f01fe50dda5d, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593e6f1553c7f01fe50dda5d, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:object "Macguffin", :verb "chase", :role "Hero"})

("perm(chase(R, S)) if role(R, hero), object(S, macguffin)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:object "Macguffin", :verb "chase", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:object Macguffin, :verb chase, :role Hero}})
(nil nil)

({:object "Macguffin", :verb "chase", :role "Hero"} {:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"})

OS:
()
()
TROPES:
[{:id 593e6f1553c7f01fe50dda5d, :label Item Search, :events [{:object Macguffin, :verb chase, :role Hero} {:or [{:object Macguffin, :verb find, :role Hero} {:place Home, :verb go, :role Hero}]}], :subverted false, :places [{:id Home, :label Home, :location Home}], :objects [{:id The Macguffin, :label The Macguffin, :type The Macguffin}], :characters [{:id The Hero, :label The Hero, :role The Hero}]} {:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
HMAP:
[{:id 593a99a453c7f0153e5157a4, :label Example 1, :events [{:place Home, :verb go, :role Hero} {:object Sword, :verb find, :role Hero} {:place Land of Adventure, :verb go, :role Hero}], :subverted false, :places [{:id The Land of Adventure, :label The Land of Adventure, :location The Land of Adventure} {:id Home, :label Home, :location Home}], :objects [{:id The Sword, :label The Sword, :type The Sword}], :characters [{:id The Hero, :label The Hero, :role The Hero}]}]
FIRT EVESTNE:
({:place "Home", :verb "go", :role "Hero"})

("perm(go(R, T)) if role(R, hero), place(T, home)")

SUBS2:
({:subtrope nil} {:subtrope nil, :phase "active", :trigger {:place "Home", :verb "go", :role "Hero"}} {:subtrope nil, :phase "A", :trigger {:object "Sword", :verb "find", :role "Hero"}})

Filter:
({:subtrope nil} {:subtrope nil, :phase active, :trigger {:place Home, :verb go, :role Hero}} {:subtrope nil, :phase A, :trigger {:object Sword, :verb find, :role Hero}})
(nil nil nil)

({:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"})

OS:
()
()
hey
[{:id "593e6f1553c7f01fe50dda5d", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]} {:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}]

{:id "593e6f1553c7f01fe50dda5d", :label "Item Search", :events [{:object "Macguffin", :verb "chase", :role "Hero"} {:or [{:object "Macguffin", :verb "find", :role "Hero"} {:place "Home", :verb "go", :role "Hero"}]}], :subverted false, :places [{:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Macguffin", :label "The Macguffin", :type "The Macguffin"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

{:id "593a99a453c7f0153e5157a4", :label "Example 1", :events [{:place "Home", :verb "go", :role "Hero"} {:object "Sword", :verb "find", :role "Hero"} {:place "Land of Adventure", :verb "go", :role "Hero"}], :subverted false, :places [{:id "The Land of Adventure", :label "The Land of Adventure", :location "The Land of Adventure"} {:id "Home", :label "Home", :location "Home"}], :objects [{:id "The Sword", :label "The Sword", :type "The Sword"}], :characters [{:id "The Hero", :label "The Hero", :role "The Hero"}]}

BRIDGE: []

